webpackHotUpdate_N_E("pages/index",{

/***/ "./src/lib/helperFunctions.js":
/*!************************************!*\
  !*** ./src/lib/helperFunctions.js ***!
  \************************************/
/*! exports provided: simplifyCost, hideNavFooter, showNavFooter, extractSearchParams, getFormValue, flattenObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"simplifyCost\", function() { return simplifyCost; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hideNavFooter\", function() { return hideNavFooter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"showNavFooter\", function() { return showNavFooter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"extractSearchParams\", function() { return extractSearchParams; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFormValue\", function() { return getFormValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flattenObject\", function() { return flattenObject; });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment */ \"./node_modules/moment/moment.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n // import cookie from 'react-cookies';\n\n // import { insurersLogos } from 'constants/images';\n// import { FORMSTATES, getPostal } from '../actions/insuranceActions';\n// import { dateToStoreString, ISOStringToFormDate } from '../lib/dateFunctions';\n// import { validateFormValue } from '../lib/validatorsV2';\n// export const isNull = (value) => {\n//   if (_.isNumber(value)) {\n//     return false;\n//   }\n//   if (Array.isArray(value) && _.isEmpty(value)) {\n//     return true;\n//   }\n//   if (value && (typeof value.getMonth === 'function' || typeof value.name === 'string')) {\n//     return false;\n//   }\n//   return _.isEmpty(value);\n// };\n// // stripe the attribue object with empty descriptions\n// export const compactCheckoutAttributes = attribute => (\n//   _.reduce(attribute, (result, arr) => {\n//     if (arr.description && !_.isEmpty(arr.description)) {\n//       result.push(arr);\n//     }\n//     return result;\n//   }, [])\n// );\n// export const getCheckoutParamsWording = (isAdHoc, adHocData, selectedPlanData, getParamsCallback) => {\n//   const params = {};\n//   let wording = null;\n//   try {\n//     if (isAdHoc) {\n//       params.sessionParams = adHocData.data;\n//       params.amountPayable = adHocData.amount_payable;\n//       params.price = adHocData.data.price;\n//     } else {\n//       params.sessionParams = getParamsCallback();\n//       params.amountPayable = selectedPlanData.policyInfo[selectedPlanData.planType].net_price;\n//       params.price = selectedPlanData.policyInfo[selectedPlanData.planType].price;\n//       wording = selectedPlanData.info.wording_url;\n//     }\n//   } catch (error) {\n//     console.log('Get params failed', error);\n//   }\n//   return {\n//     params,\n//     wording,\n//   };\n// };\n// export const getCheckoutHeaderDataCoverage = (categoryType, isAdHoc, adHocData, selectedPlanData, params) => {\n//   const insurerSlug = isAdHoc ? adHocData.insurer : selectedPlanData.info.insurer_slug;\n//   const insurerName = isAdHoc ? adHocData.data.client_display_name : selectedPlanData.info.insurer_name;\n//   const productName = isAdHoc ? adHocData.policy_name : selectedPlanData.info.product_name;\n//   const date = isAdHoc ? ISOStringToFormDate(adHocData.created_at) : dateToStoreString(new Date());\n//   const coverage = _.startCase(isAdHoc ? adHocData.data.session_params.policy_type : params.sessionParams.session_params.policy_type);\n//   return {\n//     headerData: {\n//       logo: insurersLogos.all[insurerSlug],\n//       insurerName,\n//       insurerDesc: productName,\n//       data1: 'Type',\n//       data1Value: categoryType,\n//       data2: 'Date',\n//       data2Value: date,\n//     },\n//     coverage,\n//   };\n// };\n// // Strip empty details\n// export const getCompactSubDetails = (subdetails) => {\n//   const newSubDetail = subdetails;\n//   if (subdetails.leftDetail && subdetails.leftDetail.attributes && _.isEmpty(subdetails.leftDetail.attributes)) {\n//     newSubDetail.leftDetail = newSubDetail.rightDetail;\n//     delete newSubDetail.rightDetail;\n//   }\n//   if (subdetails.rightDetail && subdetails.rightDetail.attributes && _.isEmpty(subdetails.rightDetail.attributes)) {\n//     delete newSubDetail.rightDetail;\n//   }\n//   return newSubDetail;\n// };\n// export const getCheckoutParamsWordingNew = (planType, isAdHoc, adHocData, selectedPlanData, getParamsCallback) => {\n//   const params = {};\n//   let wording = null;\n//   try {\n//     if (isAdHoc) {\n//       params.sessionParams = adHocData.data;\n//       params.amountPayable = adHocData.amount_payable;\n//       params.price = adHocData.data.price;\n//     } else {\n//       params.sessionParams = getParamsCallback();\n//       params.amountPayable = selectedPlanData.policy_info[planType].premium.net_price;\n//       params.price = selectedPlanData.policy_info[planType].premium.price;\n//       wording = selectedPlanData.info.wording_url;\n//     }\n//   } catch (error) {\n//     console.log('Get params failed', error);\n//   }\n//   return {\n//     params,\n//     wording,\n//   };\n// };\n// export const getCheckoutHeaderDataCoverageNew = (category, isAdHoc, adHocData, selectedPlanData, params) => {\n//   try {\n//     const insurerSlug = isAdHoc ? adHocData.insurer : selectedPlanData.info.insurer_slug;\n//     const insurerName = isAdHoc ? adHocData.data.client_display_name : selectedPlanData.info.insurer_name;\n//     const productName = isAdHoc ? adHocData.policy_name : selectedPlanData.info.product_name;\n//     const date = isAdHoc ? ISOStringToFormDate(adHocData.created_at) : dateToStoreString(new Date());\n//     const coverage = _.startCase(isAdHoc ? adHocData.data.session_params.policy_type : params.sessionParams.session_params.policy_type);\n//     return {\n//       headerData: {\n//         logo: insurersLogos.all[insurerSlug],\n//         insurerName,\n//         insurerDesc: productName,\n//         data1: 'Type',\n//         data1Value: category,\n//         data2: 'Date',\n//         data2Value: date,\n//       },\n//       coverage,\n//     };\n//   } catch (error) {\n//     // eslint-disable-next-line\n//   }\n//   return null;\n// };\n// // used for slider control, simplify costs\n\nvar simplifyCost = function simplifyCost(value) {\n  var noPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  try {\n    var symbols = ['', 'k', 'm'];\n    var valueToUse = parseInt(value, 10);\n    var initialMoreThan1000 = valueToUse > 1000;\n    var symbolIndex = 0;\n\n    while (initialMoreThan1000 && valueToUse > 999) {\n      valueToUse *= 0.001;\n      symbolIndex += 1;\n    }\n\n    return noPrefix ? \"\".concat(valueToUse).concat(symbols[symbolIndex]) : \"S$\".concat(valueToUse).concat(symbols[symbolIndex]);\n  } catch (error) {\n    console.log('Parse cost failed');\n  }\n\n  return null;\n}; // // Simpifly costs but takes in array\n// export const simplifyCostArray = array => (\n//   _.reduce(array, (result, value) => {\n//     const newValue = simplifyCost(value);\n//     if (newValue) {\n//       result.push(newValue);\n//     }\n//     return result;\n//   }, [])\n// );\n// // used to remap data from formfield API to be compatible with\n// // detail view\n// export const remapFormFields = (array) => {\n//   if (!array) {\n//     return {};\n//   }\n//   return _.reduce(array, (result, field) => {\n//     const newResult = {\n//       ...result,\n//       [field.name]: {\n//         ...field,\n//       },\n//     };\n//     return newResult;\n//   }, {});\n// };\n// export const remapUserDetails = (fields, userDetails, enableEmptyFields = false, setDependentField) => {\n//   try {\n//     const detailsResult = _.reduce(fields, (result, field) => {\n//       const newResult = { ...result };\n//       let { slug } = field;\n//       if (slug) {\n//         let detailValue = field.value;\n//         if (slug === 'name') {\n//           const firstNameValue = userDetails && userDetails.firstName;\n//           const familyNameValue = userDetails && userDetails.surname;\n//           detailValue = firstNameValue || familyNameValue ? `${firstNameValue || ''}${firstNameValue ? ' ' : ''}${familyNameValue || ''}` : field.value;\n//         } else if (slug === 'given_name') {\n//           slug = 'firstName';\n//         } else if (slug === 'family_name') {\n//           slug = 'surname';\n//         } else if (slug === 'birth_date') {\n//           slug = 'dateOfBirth';\n//         } else if (slug === 'mobile_number') {\n//           slug = 'contact';\n//         } else if (slug === 'postal') {\n//           slug = 'postal_code';\n//         } else if (slug === 'gender_inner') {\n//           slug = 'gender';\n//         } else if (slug === 'is_smoker') {\n//           slug = 'smoker';\n//         }\n//         if (slug !== 'name') {\n//           detailValue = userDetails[slug] || detailValue;\n//         }\n//         const rawDetailValue = detailValue;\n//         if (detailValue) {\n//           if (!field.value && detailValue) {\n//             if (field.type === 'select') {\n//               if (field.slug === 'relationship' && _.includes(detailValue, 'My Child')) {\n//                 detailValue = 'My Child';\n//               }\n//               detailValue = { display_name: detailValue, value: detailValue };\n//             } else if (field.type === 'date') {\n//               detailValue = moment(userDetails.dateOfBirth).toDate();\n//               if ((detailValue || '').toString() === 'Invalid Date') {\n//                 detailValue = moment(userDetails.dateOfBirth, 'DD/MM/YYYY').toDate();\n//                 if ((detailValue || '').toString() === 'Invalid Date') {\n//                   detailValue = null;\n//                 }\n//               }\n//             }\n//           }\n//         }\n//         // TO DO, fix this hack\n//         if (field.type === 'select' && detailValue && !detailValue.value) {\n//           detailValue = { display_name: rawDetailValue, value: rawDetailValue };\n//         }\n//         if (enableEmptyFields || (!enableEmptyFields && detailValue)) {\n//           newResult[field.slug] = { type: field.type, value: detailValue || null };\n//         }\n//       }\n//       return newResult;\n//     }, {});\n//     if (setDependentField) {\n//       detailsResult.save_dependent = { type: 'switch', value: false };\n//       detailsResult.dependent_in_use = { type: 'dependent-in-use', value: true };\n//       detailsResult.dependent = { type: 'dependent-dropdown', value: 0 };\n//     }\n//     return detailsResult;\n//   } catch (error) {\n//     // eslint-disable-next-line\n//   }\n//   return {};\n// };\n// // Hide nav and footer if mobile\n// export const hideNavFooterIfMobile = (location, doSetIntercomVisibility) => {\n//   if (location && location.pathname && _.includes(location.pathname, 'mobile')) {\n//     $('.navigation').css('cssText', 'display: none !important;');\n//     $('.footer').css('cssText', 'display: none !important;');\n//     doSetIntercomVisibility(false);\n//   }\n// };\n\nvar hideNavFooter = function hideNavFooter() {\n  jquery__WEBPACK_IMPORTED_MODULE_2___default()('.navbar').css('cssText', 'display: none !important;');\n  jquery__WEBPACK_IMPORTED_MODULE_2___default()('.main-container-fluid').css('cssText', 'padding-top: 0 !important;');\n  jquery__WEBPACK_IMPORTED_MODULE_2___default()('.footer').css('cssText', 'display: none !important;');\n  jquery__WEBPACK_IMPORTED_MODULE_2___default()('.subscribe-container').css('cssText', 'display: none !important;'); // if (doSetIntercomVisibility) {\n  //   doSetIntercomVisibility(false);\n  // }\n};\nvar showNavFooter = function showNavFooter() {\n  jquery__WEBPACK_IMPORTED_MODULE_2___default()('.navbar').css('cssText', '');\n  jquery__WEBPACK_IMPORTED_MODULE_2___default()('.main-container-fluid').css('cssText', '');\n  jquery__WEBPACK_IMPORTED_MODULE_2___default()('.footer').css('cssText', '');\n  jquery__WEBPACK_IMPORTED_MODULE_2___default()('.subscribe-container').css('cssText', ''); // if (doSetIntercomVisibility) {\n  //   doSetIntercomVisibility(true);\n  // }\n};\nvar extractSearchParams = function extractSearchParams(searchString) {\n  try {\n    var search = searchString.slice(1);\n    var splitParts = search.split('&');\n\n    var params = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.reduce(splitParts, function (result, part) {\n      var newResult = _objectSpread({}, result);\n\n      var split = part.split('=');\n\n      if (split.length > 1 && split[0] !== '') {\n        // eslint-disable-next-line\n        newResult[split[0]] = split[1];\n      }\n\n      return newResult;\n    }, {});\n\n    return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.isEmpty(params) ? null : params;\n  } catch (error) {\n    // eslint-disable-next-line\n    console.log(error);\n  }\n\n  return null;\n}; // export const routeHandler = (baseRoute, formState, formIndex, match, history, formStates = null, prevPathName = null, setFormState, triggerState, doTriggerInsuranceFormState) => {\n//   let index = formState;\n//   const formStatesToUse = formStates || FORMSTATES;\n//   try {\n//     if (match.params.page) {\n//       const newPath = _.find(formStatesToUse, state => _.includes(state.path, match.params.page));\n//       if (formStatesToUse.SUBMITTED && formState === formStatesToUse.SUBMITTED.index && newPath.index !== formStatesToUse.SUBMITTED.index) {\n//         let extraURL = '';\n//         if (history.params) {\n//           if (history.params.insurer) {\n//             extraURL = `${extraURL}/${history.params.insurer}`;\n//           }\n//           if (history.params.product) {\n//             extraURL = `${extraURL}/${history.params.product}`;\n//           }\n//           if (history.params.checkout) {\n//             extraURL = `${extraURL}/${history.params.checkout}`;\n//           }\n//         }\n//         history.push(`${baseRoute}${formStatesToUse.SUBMITTED.path}${extraURL}`);\n//         // eslint-disable-next-line\n//         index = formStatesToUse.SUBMITTED.index;\n//       } else if (index < newPath.index) {\n//         if (prevPathName && _.includes(prevPathName, baseRoute)) {\n//           history.goBack();\n//         } else {\n//           history.replace(`${baseRoute}`);\n//         }\n//       } else {\n//         // eslint-disable-next-line\n//         index = newPath.index;\n//       }\n//     } else if (/\\/flow\\//.test(history.location.pathname)) {\n//       const searchParams = extractSearchParams(history.location.search) || {};\n//       const newPath = _.find(formStatesToUse, state => (prevPathName && formState > 1 ? state.index === formState : state.step === 0) && _.includes(state.path, match.params.insurer) && _.includes(state.path, match.params.product));\n//       const incomingPath = _.find(formStatesToUse, state => state.step === (+searchParams.step || 0) && _.includes(state.path, match.params.insurer) && _.includes(state.path, match.params.product));\n//       let searchString = '';\n//       delete searchParams.step;\n//       if (!isEmpty(searchParams)) {\n//         searchString = _.reduce(searchParams, (r, p, k) => `${r}${k}=${p}&`, /\\?/.test(newPath.path) ? '&' : '?');\n//         searchString = searchString.slice(0, -1);\n//       }\n//       // let referralSearch = '';\n//       // if (searchParams.c) {\n//       //   referralSearch = /\\?/.test(newPath.path) ? `&c=${searchParams.c}` : `?c=${searchParams.c}`;\n//       // }\n//       if (newPath.endState && incomingPath.step < newPath.step) {\n//         history.replace(`${baseRoute}${newPath.path}${searchString}`);\n//       } else if (!prevPathName && newPath) {\n//         history.replace(`${baseRoute}${newPath.path}${searchString}`);\n//         ({ index } = newPath);\n//       } else if (triggerState && newPath) {\n//         ({ index } = newPath);\n//         doTriggerInsuranceFormState(false);\n//       } else if (prevPathName && incomingPath.path < newPath.path) {\n//         ({ index } = incomingPath);\n//         setTimeout(() => setFormState(incomingPath.index));\n//       } else if (incomingPath.step !== 0 && prevPathName === `${baseRoute}${newPath.path}` && incomingPath.step > newPath.step) {\n//         history.goBack();\n//       } else {\n//         ({ index } = newPath);\n//       }\n//     } else {\n//       index = 0;\n//     }\n//   } catch (error) {\n//     // eslint-disable-next-line no-empty\n//     console.log(error);\n//   }\n//   return ({\n//     formIndex: formIndex !== index ? index : null,\n//   });\n// };\n// export const getFieldsFromForms = (pages) => {\n//   let allFields = [];\n//   try {\n//     allFields = _.reduce(pages, (result, page) => {\n//       _.each(page.forms, (f) => {\n//         result.push(f);\n//       });\n//       return result;\n//     }, []);\n//   } catch (error) {\n//     // eslint-disable-next-line\n//   }\n//   return allFields;\n// };\n// export const generateRequestData = (allFields, values) => {\n//   let requestData = null;\n//   try {\n//     requestData = {};\n//     _.each(allFields, (field) => {\n//       const value = values[field.slug];\n//       if (value) {\n//         const errorResult = validateFormValue(field.slug, value, values, allFields);\n//         if (errorResult && errorResult[field.slug]) {\n//           throw new Error('Request data is invalid');\n//         }\n//         const parsedValue = field.type === 'date' || field.type === 'end_date' ? value.value.toISOString() : value.value;\n//         if (parsedValue) {\n//           requestData[field.slug] = parsedValue;\n//         }\n//       }\n//     });\n//   } catch (error) {\n//     // eslint-disable-next-line\n//   }\n//   return requestData;\n// };\n// export const numberWithCommas = (x) => {\n//   try {\n//     let value = x.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n//     const splitted = value.toString().split('.');\n//     if (splitted.length === 1) {\n//       value = `${value}.00`;\n//     } else if (splitted.length === 2 && splitted[1].length === 1) {\n//       value = `${value}0`;\n//     }\n//     return value;\n//   } catch (error) {\n//     return x;\n//   }\n// };\n// export const getAmpTags = (selectedPlanData, planType) => {\n//   try {\n//     let discount = null;\n//     _.map(selectedPlanData.info.discount, (data) => {\n//       discount = data.display;\n//     });\n//     if (_.isEmpty(discount)) {\n//       discount = '0%';\n//     }\n//     return ({\n//       type: planType,\n//       partner: selectedPlanData.info.insurer_slug,\n//       price: selectedPlanData.policy_info[planType].premium.net_price,\n//       discount,\n//     });\n//   } catch (error) {\n//     console.log(`Travel choose plan Buy now Amp tag failed: ${error.message}`);\n//   }\n//   return {};\n// };\n\nvar getFormValue = function getFormValue(valueItem, forDisplay) {\n  try {\n    if (valueItem) {\n      if (valueItem.type === 'select') {\n        return forDisplay ? valueItem.value.value.toString() : valueItem.value.value;\n      }\n\n      if (valueItem.type === 'multiple_select') {\n        var result = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.map(valueItem.value, function (v) {\n          return v.value;\n        });\n\n        return forDisplay ? result.toString().replace(/,/g, ', ') : result;\n      }\n\n      if (forDisplay && valueItem.type === 'date') {\n        return moment__WEBPACK_IMPORTED_MODULE_1___default()(valueItem.value).format('DD MMM YYYY');\n      }\n\n      var finalValue = valueItem.value;\n\n      try {\n        if (typeof finalValue === 'string') {\n          finalValue = finalValue.trim();\n        }\n      } catch (error) {// eslint-disable-next-line\n      }\n\n      return finalValue;\n    }\n  } catch (error) {// eslint-disable-next-line\n  }\n\n  return null;\n}; // export const revertFormValue = (field, key, value) => {\n//   try {\n//     if (field && key) {\n//       let v = value;\n//       if (field.type === 'select' && value && value !== '') {\n//         v = { display_name: value, value };\n//       } else if (field.type === 'multiple_select' && !_.isEmpty(value)) {\n//         v = _.map(value, v2 => ({ display_name: v2, value: v2 }));\n//       } else if (field.type === 'number' && value) {\n//         // v = parseInt(value.toString(), 10);\n//       } else if (field.type === 'date' && value) {\n//         v = moment(value, 'DD/MM/YYYY').toDate();\n//         if (!v || v.toString() === 'Invalid Date') {\n//           v = moment(value).toDate();\n//         }\n//       }\n//       return { type: field.type, value: v };\n//     }\n//   } catch (error) {\n//     // eslint-disable-next-line\n//   }\n//   return null;\n// };\n// export const revertFormValuesUsingDefault = (defaultValues, values, oldValues = {}) => {\n//   try {\n//     return _.reduce(defaultValues, (result, field, key) => {\n//       const newResult = { ...result };\n//       const value = revertFormValue(field, key, values[key]);\n//       newResult[key] = value && value.value && value.value !== '' ? value : oldValues[key];\n//       return newResult;\n//     }, {});\n//   } catch (error) {\n//     // eslint-disable-next-line\n//   }\n//   return null;\n// };\n// export const revertFormValues = (fields, values) => {\n//   try {\n//     return _.reduce(fields, (result, field) => {\n//       const newResult = { ...result };\n//       const value = revertFormValue(field, field.slug, values[field.slug]);\n//       newResult[field.slug] = value && value.value && value.value !== '' ? value : values[field.slug];\n//       return newResult;\n//     }, {});\n//   } catch (error) {\n//     // eslint-disable-next-line\n//   }\n//   return null;\n// };\n// export const parseConstants = (constants) => {\n//   const results = {\n//     gender: [\n//       'Male',\n//       'Female',\n//     ],\n//     maritalStatus: [\n//       'Single',\n//       'Married',\n//     ],\n//     race: [\n//       'Chinese',\n//       'Malay',\n//       'Indian',\n//       'Eurasian',\n//       'Others',\n//     ],\n//     smoker: [\n//       'Smoker',\n//       'Non-smoker',\n//     ],\n//   };\n//   const initialCountries = [\n//     'Malaysia',\n//     'Thailand',\n//     'Indonesia',\n//     'Philippines',\n//     'Vietnam',\n//     'Cambodia',\n//     'China',\n//     'India',\n//     'Japan',\n//     'South Korea',\n//     'Australia',\n//   ];\n//   try {\n//     let countries = _.reduce(constants.countries, (result, data) => {\n//       result.push(data.name);\n//       return result;\n//     }, []);\n//     _.remove(countries, item => _.indexOf(initialCountries, item) !== -1);\n//     countries = [...initialCountries, ...countries];\n//     results.countries = countries;\n//     results.nationalities = _.reduce(constants.nationalities, (result, data) => {\n//       result.push(data.name);\n//       return result;\n//     }, []);\n//     results.occupations = _.reduce(constants.occupations, (result, data) => {\n//       result.push(data.name);\n//       return result;\n//     }, []);\n//     results.relationships = _.reduce(constants.relationships, (result, data) => {\n//       if (data.name !== 'Myself' && !_.includes(data.name, 'Child')) {\n//         result.push(data.name);\n//         if (result.length === 1) {\n//           result.push('My Child');\n//         }\n//       }\n//       return result;\n//     }, []);\n//     results.idTypes = _.reduce(constants.id_types, (result, data) => {\n//       result.push(data.name);\n//       return result;\n//     }, []);\n//     results.industries = _.reduce(constants.industries, (result, data) => {\n//       result.push(data.name);\n//       return result;\n//     }, []);\n//     const banks = constants.banks && constants.banks.referral ? constants.banks.referral : [];\n//     results.banks = _.reduce(banks, (result, data) => {\n//       result.push(data.name);\n//       return result;\n//     }, []);\n//     return results;\n//   } catch (error) {\n//     return null;\n//   }\n// };\n// export const getWrappedComponent = (node) => {\n//   let newNode = node;\n//   try {\n//     for (; ;) {\n//       if (!newNode.getWrappedComponent) {\n//         break;\n//       }\n//       newNode = newNode.getWrappedComponent();\n//     }\n//   } catch (error) {\n//     // eslint-disable-next-line\n//   }\n//   return newNode;\n// };\n// export const handlePostCode = async (values, onChangeDetailValue, formName = null) => {\n//   try {\n//     if (values) {\n//       const postcode = values.postal.value;\n//       const result = await getPostal(postcode);\n//       if (result) {\n//         // const streetName = result.name === '' ? '' : `${result.name} `;\n//         const street = result.street === '' ? '' : `${result.street} `;\n//         const block = result.block === '' ? '' : `${result.block} `;\n//         // let concatAddress = `${block}${streetName}${street}`;\n//         let concatAddress = `${block}${street}`;\n//         onChangeDetailValue('text', 'blk_no', result.block, formName);\n//         concatAddress = street;\n//         onChangeDetailValue('text', 'address', concatAddress, formName);\n//       }\n//     }\n//   } catch (error) {\n//     // eslint-disable-next-line\n//   }\n// };\n// export const getDependentDropdownList = (profile, dependents) => {\n//   try {\n//     return _.reduce(dependents, (result, d) => {\n//       if (d && d.id) {\n//         result.push({\n//           id: d.id,\n//           gender: d.gender || 'Male',\n//           name: d.firstName || d.surname ? `${d.firstName || ''}${d.firstName ? ' ' : ''}${d.surname || ''}` : 'Myself',\n//           relationship: d.relationship || 'dependant',\n//         });\n//       }\n//       return result;\n//     }, profile ? [{\n//       id: 0,\n//       gender: profile.gender || 'Male',\n//       name: profile.firstName || profile.surname ? `${profile.firstName || ''}${profile.firstName ? ' ' : ''}${profile.surname || ''}` : 'Myself',\n//       relationship: 'Myself',\n//     }] : []);\n//   } catch (error) {\n//     // eslint-disable-next-line\n//   }\n//   return null;\n// };\n// export const manageRebate = (locationSearch, doSetPartnershipParams, partnersToStoreCookies = []) => {\n//   try {\n//     let searchParamsToUse = null;\n//     let isFromURL = false;\n//     // Extract all search params\n//     const searchParams = extractSearchParams(locationSearch);\n//     // Use searchParams if incoming is rebate data\n//     if (searchParams && searchParams.utm_source && searchParams.reference_id) {\n//       searchParamsToUse = searchParams;\n//       isFromURL = true;\n//     }\n//     // else {\n//     //   // If not, check cookies\n//     //   const savedParams = cookie.load('rebate_data');\n//     //   // If all params are valid\n//     //   if (savedParams\n//     //     && savedParams.utm_source\n//     //     && savedParams.reference_id\n//     //   ) {\n//     //     searchParamsToUse = savedParams;\n//     //   }\n//     // }\n//     // If there is valid rebate data to use\n//     if (searchParamsToUse) {\n//       // Set it to the state\n//       doSetPartnershipParams(\n//         searchParamsToUse.utm_source,\n//         searchParamsToUse.reference_id,\n//       );\n//       // If params is from incoming url\n//       if (searchParams && isFromURL) {\n//         const partnerInfo = partnersToStoreCookies.find(p => p.source === searchParams.utm_source);\n//         // Store to cookie if found\n//         if (partnerInfo) {\n//           cookie.save('rebate_data', JSON.stringify(searchParams), {\n//             path: '/',\n//             expires: moment().add(partnerInfo.expiry_days, 'days').toDate(),\n//           });\n//         } else {\n//           // Remove previous data if incoming is not going to be saved\n//           cookie.remove('rebate_data', { path: '/' });\n//         }\n//       }\n//     }\n//   } catch (error) {\n//     // eslint-disable-next-line\n//   }\n// };\n\nvar flattenObject = function flattenObject(object) {\n  return lodash__WEBPACK_IMPORTED_MODULE_3___default.a.reduce(object, function (result, category, categoryKey) {\n    lodash__WEBPACK_IMPORTED_MODULE_3___default.a.forEach(category, function (item, key) {\n      // eslint-disable-next-line\n      result[\"\".concat(categoryKey, \".\").concat(key)] = item;\n    });\n\n    return result;\n  }, {});\n}; // export const copyToClipboard = (str) => {\n//   const el = document.createElement('textarea');\n//   el.value = str;\n//   el.setAttribute('readonly', '');\n//   el.style.position = 'absolute';\n//   el.style.left = '-9999px';\n//   document.body.appendChild(el);\n//   const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n//   el.select();\n//   document.execCommand('copy');\n//   document.body.removeChild(el);\n//   if (selected) {\n//     document.getSelection().removeAllRanges();\n//     document.getSelection().addRange(selected);\n//   }\n// };\n// export const scrollToElementID = (id) => {\n//   const ele = document.getElementById(id);\n//   if (ele) {\n//     const bodyRect = document.body.getBoundingClientRect();\n//     const elemRect = ele.getBoundingClientRect();\n//     const offset = elemRect.top - bodyRect.top - 88;\n//     window.scrollTo({ behavior: 'smooth', top: offset });\n//   }\n// };\n// export const goToLink = (history, url) => {\n//   try {\n//     if (!/\\/blog\\//.test(url) && /^www|http/.test(url)) {\n//       const splitted = url.split('policypal.com');\n//       history.push(splitted.length > 1 ? splitted[splitted.length - 1] : url);\n//     } else {\n//       window.open(url, '_blank');\n//     }\n//   } catch (error) {\n//     window.location.href = url;\n//   }\n// };\n// export const isMobile = () => {\n//   const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n//   if (userAgent.match(/Android/i)\n//     || userAgent.match(/webOS/i)\n//     || userAgent.match(/iPhone/i)\n//     || userAgent.match(/iPad/i)\n//     || userAgent.match(/iPod/i)\n//     || userAgent.match(/BlackBerry/i)\n//     || userAgent.match(/Windows Phone/i)\n//   ) {\n//     return true;\n//   }\n//   return false;\n// };\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9oZWxwZXJGdW5jdGlvbnMuanM/NjY1NyJdLCJuYW1lcyI6WyJzaW1wbGlmeUNvc3QiLCJ2YWx1ZSIsIm5vUHJlZml4Iiwic3ltYm9scyIsInZhbHVlVG9Vc2UiLCJwYXJzZUludCIsImluaXRpYWxNb3JlVGhhbjEwMDAiLCJzeW1ib2xJbmRleCIsImVycm9yIiwiY29uc29sZSIsImxvZyIsImhpZGVOYXZGb290ZXIiLCIkIiwiY3NzIiwic2hvd05hdkZvb3RlciIsImV4dHJhY3RTZWFyY2hQYXJhbXMiLCJzZWFyY2hTdHJpbmciLCJzZWFyY2giLCJzbGljZSIsInNwbGl0UGFydHMiLCJzcGxpdCIsInBhcmFtcyIsIl8iLCJyZWR1Y2UiLCJyZXN1bHQiLCJwYXJ0IiwibmV3UmVzdWx0IiwibGVuZ3RoIiwiaXNFbXB0eSIsImdldEZvcm1WYWx1ZSIsInZhbHVlSXRlbSIsImZvckRpc3BsYXkiLCJ0eXBlIiwidG9TdHJpbmciLCJtYXAiLCJ2IiwicmVwbGFjZSIsIm1vbWVudCIsImZvcm1hdCIsImZpbmFsVmFsdWUiLCJ0cmltIiwiZmxhdHRlbk9iamVjdCIsIm9iamVjdCIsImNhdGVnb3J5IiwiY2F0ZWdvcnlLZXkiLCJmb3JFYWNoIiwiaXRlbSIsImtleSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtDQUVBOztDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7O0FBQ08sSUFBTUEsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsS0FBRCxFQUE2QjtBQUFBLE1BQXJCQyxRQUFxQix1RUFBVixLQUFVOztBQUN2RCxNQUFJO0FBQ0YsUUFBTUMsT0FBTyxHQUFHLENBQUMsRUFBRCxFQUFLLEdBQUwsRUFBVSxHQUFWLENBQWhCO0FBQ0EsUUFBSUMsVUFBVSxHQUFHQyxRQUFRLENBQUNKLEtBQUQsRUFBUSxFQUFSLENBQXpCO0FBQ0EsUUFBTUssbUJBQW1CLEdBQUdGLFVBQVUsR0FBRyxJQUF6QztBQUNBLFFBQUlHLFdBQVcsR0FBRyxDQUFsQjs7QUFDQSxXQUFPRCxtQkFBbUIsSUFBSUYsVUFBVSxHQUFHLEdBQTNDLEVBQWdEO0FBQzlDQSxnQkFBVSxJQUFJLEtBQWQ7QUFDQUcsaUJBQVcsSUFBSSxDQUFmO0FBQ0Q7O0FBRUQsV0FBT0wsUUFBUSxhQUFNRSxVQUFOLFNBQW1CRCxPQUFPLENBQUNJLFdBQUQsQ0FBMUIsZ0JBQWlESCxVQUFqRCxTQUE4REQsT0FBTyxDQUFDSSxXQUFELENBQXJFLENBQWY7QUFDRCxHQVhELENBV0UsT0FBT0MsS0FBUCxFQUFjO0FBQ2RDLFdBQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaO0FBQ0Q7O0FBRUQsU0FBTyxJQUFQO0FBQ0QsQ0FqQk0sQyxDQW1CUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFTyxJQUFNQyxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLEdBQU07QUFDakNDLCtDQUFDLENBQUMsU0FBRCxDQUFELENBQWFDLEdBQWIsQ0FBaUIsU0FBakIsRUFBNEIsMkJBQTVCO0FBQ0FELCtDQUFDLENBQUMsdUJBQUQsQ0FBRCxDQUEyQkMsR0FBM0IsQ0FBK0IsU0FBL0IsRUFBMEMsNEJBQTFDO0FBQ0FELCtDQUFDLENBQUMsU0FBRCxDQUFELENBQWFDLEdBQWIsQ0FBaUIsU0FBakIsRUFBNEIsMkJBQTVCO0FBQ0FELCtDQUFDLENBQUMsc0JBQUQsQ0FBRCxDQUEwQkMsR0FBMUIsQ0FBOEIsU0FBOUIsRUFBeUMsMkJBQXpDLEVBSmlDLENBTWpDO0FBQ0E7QUFDQTtBQUNELENBVE07QUFXQSxJQUFNQyxhQUFhLEdBQUcsU0FBaEJB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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPLElBQU1pQyxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLENBQUNDLE1BQUQ7QUFBQSxTQUFZcEIsNkNBQUMsQ0FBQ0MsTUFBRixDQUFTbUIsTUFBVCxFQUFpQixVQUFDbEIsTUFBRCxFQUFTbUIsUUFBVCxFQUFtQkMsV0FBbkIsRUFBbUM7QUFDM0Z0QixpREFBQyxDQUFDdUIsT0FBRixDQUFVRixRQUFWLEVBQW9CLFVBQUNHLElBQUQsRUFBT0MsR0FBUCxFQUFlO0FBQ2pDO0FBQ0F2QixZQUFNLFdBQUlvQixXQUFKLGNBQW1CRyxHQUFuQixFQUFOLEdBQWtDRCxJQUFsQztBQUNELEtBSEQ7O0FBS0EsV0FBT3RCLE1BQVA7QUFDRCxHQVB3QyxFQU90QyxFQVBzQyxDQUFaO0FBQUEsQ0FBdEIsQyxDQVNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL3NyYy9saWIvaGVscGVyRnVuY3Rpb25zLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnO1xuaW1wb3J0ICQgZnJvbSAnanF1ZXJ5Jztcbi8vIGltcG9ydCBjb29raWUgZnJvbSAncmVhY3QtY29va2llcyc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuLy8gaW1wb3J0IHsgaW5zdXJlcnNMb2dvcyB9IGZyb20gJ2NvbnN0YW50cy9pbWFnZXMnO1xuLy8gaW1wb3J0IHsgRk9STVNUQVRFUywgZ2V0UG9zdGFsIH0gZnJvbSAnLi4vYWN0aW9ucy9pbnN1cmFuY2VBY3Rpb25zJztcbi8vIGltcG9ydCB7IGRhdGVUb1N0b3JlU3RyaW5nLCBJU09TdHJpbmdUb0Zvcm1EYXRlIH0gZnJvbSAnLi4vbGliL2RhdGVGdW5jdGlvbnMnO1xuLy8gaW1wb3J0IHsgdmFsaWRhdGVGb3JtVmFsdWUgfSBmcm9tICcuLi9saWIvdmFsaWRhdG9yc1YyJztcblxuLy8gZXhwb3J0IGNvbnN0IGlzTnVsbCA9ICh2YWx1ZSkgPT4ge1xuLy8gICBpZiAoXy5pc051bWJlcih2YWx1ZSkpIHtcbi8vICAgICByZXR1cm4gZmFsc2U7XG4vLyAgIH1cbi8vICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpICYmIF8uaXNFbXB0eSh2YWx1ZSkpIHtcbi8vICAgICByZXR1cm4gdHJ1ZTtcbi8vICAgfVxuLy8gICBpZiAodmFsdWUgJiYgKHR5cGVvZiB2YWx1ZS5nZXRNb250aCA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgdmFsdWUubmFtZSA9PT0gJ3N0cmluZycpKSB7XG4vLyAgICAgcmV0dXJuIGZhbHNlO1xuLy8gICB9XG5cbi8vICAgcmV0dXJuIF8uaXNFbXB0eSh2YWx1ZSk7XG4vLyB9O1xuXG4vLyAvLyBzdHJpcGUgdGhlIGF0dHJpYnVlIG9iamVjdCB3aXRoIGVtcHR5IGRlc2NyaXB0aW9uc1xuLy8gZXhwb3J0IGNvbnN0IGNvbXBhY3RDaGVja291dEF0dHJpYnV0ZXMgPSBhdHRyaWJ1dGUgPT4gKFxuLy8gICBfLnJlZHVjZShhdHRyaWJ1dGUsIChyZXN1bHQsIGFycikgPT4ge1xuLy8gICAgIGlmIChhcnIuZGVzY3JpcHRpb24gJiYgIV8uaXNFbXB0eShhcnIuZGVzY3JpcHRpb24pKSB7XG4vLyAgICAgICByZXN1bHQucHVzaChhcnIpO1xuLy8gICAgIH1cbi8vICAgICByZXR1cm4gcmVzdWx0O1xuLy8gICB9LCBbXSlcbi8vICk7XG5cbi8vIGV4cG9ydCBjb25zdCBnZXRDaGVja291dFBhcmFtc1dvcmRpbmcgPSAoaXNBZEhvYywgYWRIb2NEYXRhLCBzZWxlY3RlZFBsYW5EYXRhLCBnZXRQYXJhbXNDYWxsYmFjaykgPT4ge1xuLy8gICBjb25zdCBwYXJhbXMgPSB7fTtcbi8vICAgbGV0IHdvcmRpbmcgPSBudWxsO1xuLy8gICB0cnkge1xuLy8gICAgIGlmIChpc0FkSG9jKSB7XG4vLyAgICAgICBwYXJhbXMuc2Vzc2lvblBhcmFtcyA9IGFkSG9jRGF0YS5kYXRhO1xuLy8gICAgICAgcGFyYW1zLmFtb3VudFBheWFibGUgPSBhZEhvY0RhdGEuYW1vdW50X3BheWFibGU7XG4vLyAgICAgICBwYXJhbXMucHJpY2UgPSBhZEhvY0RhdGEuZGF0YS5wcmljZTtcbi8vICAgICB9IGVsc2Uge1xuLy8gICAgICAgcGFyYW1zLnNlc3Npb25QYXJhbXMgPSBnZXRQYXJhbXNDYWxsYmFjaygpO1xuLy8gICAgICAgcGFyYW1zLmFtb3VudFBheWFibGUgPSBzZWxlY3RlZFBsYW5EYXRhLnBvbGljeUluZm9bc2VsZWN0ZWRQbGFuRGF0YS5wbGFuVHlwZV0ubmV0X3ByaWNlO1xuLy8gICAgICAgcGFyYW1zLnByaWNlID0gc2VsZWN0ZWRQbGFuRGF0YS5wb2xpY3lJbmZvW3NlbGVjdGVkUGxhbkRhdGEucGxhblR5cGVdLnByaWNlO1xuLy8gICAgICAgd29yZGluZyA9IHNlbGVjdGVkUGxhbkRhdGEuaW5mby53b3JkaW5nX3VybDtcbi8vICAgICB9XG4vLyAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgY29uc29sZS5sb2coJ0dldCBwYXJhbXMgZmFpbGVkJywgZXJyb3IpO1xuLy8gICB9XG5cbi8vICAgcmV0dXJuIHtcbi8vICAgICBwYXJhbXMsXG4vLyAgICAgd29yZGluZyxcbi8vICAgfTtcbi8vIH07XG5cbi8vIGV4cG9ydCBjb25zdCBnZXRDaGVja291dEhlYWRlckRhdGFDb3ZlcmFnZSA9IChjYXRlZ29yeVR5cGUsIGlzQWRIb2MsIGFkSG9jRGF0YSwgc2VsZWN0ZWRQbGFuRGF0YSwgcGFyYW1zKSA9PiB7XG4vLyAgIGNvbnN0IGluc3VyZXJTbHVnID0gaXNBZEhvYyA/IGFkSG9jRGF0YS5pbnN1cmVyIDogc2VsZWN0ZWRQbGFuRGF0YS5pbmZvLmluc3VyZXJfc2x1Zztcbi8vICAgY29uc3QgaW5zdXJlck5hbWUgPSBpc0FkSG9jID8gYWRIb2NEYXRhLmRhdGEuY2xpZW50X2Rpc3BsYXlfbmFtZSA6IHNlbGVjdGVkUGxhbkRhdGEuaW5mby5pbnN1cmVyX25hbWU7XG4vLyAgIGNvbnN0IHByb2R1Y3ROYW1lID0gaXNBZEhvYyA/IGFkSG9jRGF0YS5wb2xpY3lfbmFtZSA6IHNlbGVjdGVkUGxhbkRhdGEuaW5mby5wcm9kdWN0X25hbWU7XG4vLyAgIGNvbnN0IGRhdGUgPSBpc0FkSG9jID8gSVNPU3RyaW5nVG9Gb3JtRGF0ZShhZEhvY0RhdGEuY3JlYXRlZF9hdCkgOiBkYXRlVG9TdG9yZVN0cmluZyhuZXcgRGF0ZSgpKTtcbi8vICAgY29uc3QgY292ZXJhZ2UgPSBfLnN0YXJ0Q2FzZShpc0FkSG9jID8gYWRIb2NEYXRhLmRhdGEuc2Vzc2lvbl9wYXJhbXMucG9saWN5X3R5cGUgOiBwYXJhbXMuc2Vzc2lvblBhcmFtcy5zZXNzaW9uX3BhcmFtcy5wb2xpY3lfdHlwZSk7XG5cbi8vICAgcmV0dXJuIHtcbi8vICAgICBoZWFkZXJEYXRhOiB7XG4vLyAgICAgICBsb2dvOiBpbnN1cmVyc0xvZ29zLmFsbFtpbnN1cmVyU2x1Z10sXG4vLyAgICAgICBpbnN1cmVyTmFtZSxcbi8vICAgICAgIGluc3VyZXJEZXNjOiBwcm9kdWN0TmFtZSxcbi8vICAgICAgIGRhdGExOiAnVHlwZScsXG4vLyAgICAgICBkYXRhMVZhbHVlOiBjYXRlZ29yeVR5cGUsXG4vLyAgICAgICBkYXRhMjogJ0RhdGUnLFxuLy8gICAgICAgZGF0YTJWYWx1ZTogZGF0ZSxcbi8vICAgICB9LFxuLy8gICAgIGNvdmVyYWdlLFxuLy8gICB9O1xuLy8gfTtcblxuLy8gLy8gU3RyaXAgZW1wdHkgZGV0YWlsc1xuLy8gZXhwb3J0IGNvbnN0IGdldENvbXBhY3RTdWJEZXRhaWxzID0gKHN1YmRldGFpbHMpID0+IHtcbi8vICAgY29uc3QgbmV3U3ViRGV0YWlsID0gc3ViZGV0YWlscztcbi8vICAgaWYgKHN1YmRldGFpbHMubGVmdERldGFpbCAmJiBzdWJkZXRhaWxzLmxlZnREZXRhaWwuYXR0cmlidXRlcyAmJiBfLmlzRW1wdHkoc3ViZGV0YWlscy5sZWZ0RGV0YWlsLmF0dHJpYnV0ZXMpKSB7XG4vLyAgICAgbmV3U3ViRGV0YWlsLmxlZnREZXRhaWwgPSBuZXdTdWJEZXRhaWwucmlnaHREZXRhaWw7XG4vLyAgICAgZGVsZXRlIG5ld1N1YkRldGFpbC5yaWdodERldGFpbDtcbi8vICAgfVxuXG4vLyAgIGlmIChzdWJkZXRhaWxzLnJpZ2h0RGV0YWlsICYmIHN1YmRldGFpbHMucmlnaHREZXRhaWwuYXR0cmlidXRlcyAmJiBfLmlzRW1wdHkoc3ViZGV0YWlscy5yaWdodERldGFpbC5hdHRyaWJ1dGVzKSkge1xuLy8gICAgIGRlbGV0ZSBuZXdTdWJEZXRhaWwucmlnaHREZXRhaWw7XG4vLyAgIH1cblxuLy8gICByZXR1cm4gbmV3U3ViRGV0YWlsO1xuLy8gfTtcblxuLy8gZXhwb3J0IGNvbnN0IGdldENoZWNrb3V0UGFyYW1zV29yZGluZ05ldyA9IChwbGFuVHlwZSwgaXNBZEhvYywgYWRIb2NEYXRhLCBzZWxlY3RlZFBsYW5EYXRhLCBnZXRQYXJhbXNDYWxsYmFjaykgPT4ge1xuLy8gICBjb25zdCBwYXJhbXMgPSB7fTtcbi8vICAgbGV0IHdvcmRpbmcgPSBudWxsO1xuLy8gICB0cnkge1xuLy8gICAgIGlmIChpc0FkSG9jKSB7XG4vLyAgICAgICBwYXJhbXMuc2Vzc2lvblBhcmFtcyA9IGFkSG9jRGF0YS5kYXRhO1xuLy8gICAgICAgcGFyYW1zLmFtb3VudFBheWFibGUgPSBhZEhvY0RhdGEuYW1vdW50X3BheWFibGU7XG4vLyAgICAgICBwYXJhbXMucHJpY2UgPSBhZEhvY0RhdGEuZGF0YS5wcmljZTtcbi8vICAgICB9IGVsc2Uge1xuLy8gICAgICAgcGFyYW1zLnNlc3Npb25QYXJhbXMgPSBnZXRQYXJhbXNDYWxsYmFjaygpO1xuLy8gICAgICAgcGFyYW1zLmFtb3VudFBheWFibGUgPSBzZWxlY3RlZFBsYW5EYXRhLnBvbGljeV9pbmZvW3BsYW5UeXBlXS5wcmVtaXVtLm5ldF9wcmljZTtcbi8vICAgICAgIHBhcmFtcy5wcmljZSA9IHNlbGVjdGVkUGxhbkRhdGEucG9saWN5X2luZm9bcGxhblR5cGVdLnByZW1pdW0ucHJpY2U7XG4vLyAgICAgICB3b3JkaW5nID0gc2VsZWN0ZWRQbGFuRGF0YS5pbmZvLndvcmRpbmdfdXJsO1xuLy8gICAgIH1cbi8vICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICBjb25zb2xlLmxvZygnR2V0IHBhcmFtcyBmYWlsZWQnLCBlcnJvcik7XG4vLyAgIH1cblxuLy8gICByZXR1cm4ge1xuLy8gICAgIHBhcmFtcyxcbi8vICAgICB3b3JkaW5nLFxuLy8gICB9O1xuLy8gfTtcblxuLy8gZXhwb3J0IGNvbnN0IGdldENoZWNrb3V0SGVhZGVyRGF0YUNvdmVyYWdlTmV3ID0gKGNhdGVnb3J5LCBpc0FkSG9jLCBhZEhvY0RhdGEsIHNlbGVjdGVkUGxhbkRhdGEsIHBhcmFtcykgPT4ge1xuLy8gICB0cnkge1xuLy8gICAgIGNvbnN0IGluc3VyZXJTbHVnID0gaXNBZEhvYyA/IGFkSG9jRGF0YS5pbnN1cmVyIDogc2VsZWN0ZWRQbGFuRGF0YS5pbmZvLmluc3VyZXJfc2x1Zztcbi8vICAgICBjb25zdCBpbnN1cmVyTmFtZSA9IGlzQWRIb2MgPyBhZEhvY0RhdGEuZGF0YS5jbGllbnRfZGlzcGxheV9uYW1lIDogc2VsZWN0ZWRQbGFuRGF0YS5pbmZvLmluc3VyZXJfbmFtZTtcbi8vICAgICBjb25zdCBwcm9kdWN0TmFtZSA9IGlzQWRIb2MgPyBhZEhvY0RhdGEucG9saWN5X25hbWUgOiBzZWxlY3RlZFBsYW5EYXRhLmluZm8ucHJvZHVjdF9uYW1lO1xuLy8gICAgIGNvbnN0IGRhdGUgPSBpc0FkSG9jID8gSVNPU3RyaW5nVG9Gb3JtRGF0ZShhZEhvY0RhdGEuY3JlYXRlZF9hdCkgOiBkYXRlVG9TdG9yZVN0cmluZyhuZXcgRGF0ZSgpKTtcbi8vICAgICBjb25zdCBjb3ZlcmFnZSA9IF8uc3RhcnRDYXNlKGlzQWRIb2MgPyBhZEhvY0RhdGEuZGF0YS5zZXNzaW9uX3BhcmFtcy5wb2xpY3lfdHlwZSA6IHBhcmFtcy5zZXNzaW9uUGFyYW1zLnNlc3Npb25fcGFyYW1zLnBvbGljeV90eXBlKTtcblxuLy8gICAgIHJldHVybiB7XG4vLyAgICAgICBoZWFkZXJEYXRhOiB7XG4vLyAgICAgICAgIGxvZ286IGluc3VyZXJzTG9nb3MuYWxsW2luc3VyZXJTbHVnXSxcbi8vICAgICAgICAgaW5zdXJlck5hbWUsXG4vLyAgICAgICAgIGluc3VyZXJEZXNjOiBwcm9kdWN0TmFtZSxcbi8vICAgICAgICAgZGF0YTE6ICdUeXBlJyxcbi8vICAgICAgICAgZGF0YTFWYWx1ZTogY2F0ZWdvcnksXG4vLyAgICAgICAgIGRhdGEyOiAnRGF0ZScsXG4vLyAgICAgICAgIGRhdGEyVmFsdWU6IGRhdGUsXG4vLyAgICAgICB9LFxuLy8gICAgICAgY292ZXJhZ2UsXG4vLyAgICAgfTtcbi8vICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbi8vICAgfVxuXG4vLyAgIHJldHVybiBudWxsO1xuLy8gfTtcblxuLy8gLy8gdXNlZCBmb3Igc2xpZGVyIGNvbnRyb2wsIHNpbXBsaWZ5IGNvc3RzXG5leHBvcnQgY29uc3Qgc2ltcGxpZnlDb3N0ID0gKHZhbHVlLCBub1ByZWZpeCA9IGZhbHNlKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3Qgc3ltYm9scyA9IFsnJywgJ2snLCAnbSddO1xuICAgIGxldCB2YWx1ZVRvVXNlID0gcGFyc2VJbnQodmFsdWUsIDEwKTtcbiAgICBjb25zdCBpbml0aWFsTW9yZVRoYW4xMDAwID0gdmFsdWVUb1VzZSA+IDEwMDA7XG4gICAgbGV0IHN5bWJvbEluZGV4ID0gMDtcbiAgICB3aGlsZSAoaW5pdGlhbE1vcmVUaGFuMTAwMCAmJiB2YWx1ZVRvVXNlID4gOTk5KSB7XG4gICAgICB2YWx1ZVRvVXNlICo9IDAuMDAxO1xuICAgICAgc3ltYm9sSW5kZXggKz0gMTtcbiAgICB9XG5cbiAgICByZXR1cm4gbm9QcmVmaXggPyBgJHt2YWx1ZVRvVXNlfSR7c3ltYm9sc1tzeW1ib2xJbmRleF19YCA6IGBTJCR7dmFsdWVUb1VzZX0ke3N5bWJvbHNbc3ltYm9sSW5kZXhdfWA7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5sb2coJ1BhcnNlIGNvc3QgZmFpbGVkJyk7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5cbi8vIC8vIFNpbXBpZmx5IGNvc3RzIGJ1dCB0YWtlcyBpbiBhcnJheVxuLy8gZXhwb3J0IGNvbnN0IHNpbXBsaWZ5Q29zdEFycmF5ID0gYXJyYXkgPT4gKFxuLy8gICBfLnJlZHVjZShhcnJheSwgKHJlc3VsdCwgdmFsdWUpID0+IHtcbi8vICAgICBjb25zdCBuZXdWYWx1ZSA9IHNpbXBsaWZ5Q29zdCh2YWx1ZSk7XG4vLyAgICAgaWYgKG5ld1ZhbHVlKSB7XG4vLyAgICAgICByZXN1bHQucHVzaChuZXdWYWx1ZSk7XG4vLyAgICAgfVxuLy8gICAgIHJldHVybiByZXN1bHQ7XG4vLyAgIH0sIFtdKVxuLy8gKTtcblxuLy8gLy8gdXNlZCB0byByZW1hcCBkYXRhIGZyb20gZm9ybWZpZWxkIEFQSSB0byBiZSBjb21wYXRpYmxlIHdpdGhcbi8vIC8vIGRldGFpbCB2aWV3XG4vLyBleHBvcnQgY29uc3QgcmVtYXBGb3JtRmllbGRzID0gKGFycmF5KSA9PiB7XG4vLyAgIGlmICghYXJyYXkpIHtcbi8vICAgICByZXR1cm4ge307XG4vLyAgIH1cblxuLy8gICByZXR1cm4gXy5yZWR1Y2UoYXJyYXksIChyZXN1bHQsIGZpZWxkKSA9PiB7XG4vLyAgICAgY29uc3QgbmV3UmVzdWx0ID0ge1xuLy8gICAgICAgLi4ucmVzdWx0LFxuLy8gICAgICAgW2ZpZWxkLm5hbWVdOiB7XG4vLyAgICAgICAgIC4uLmZpZWxkLFxuLy8gICAgICAgfSxcbi8vICAgICB9O1xuXG4vLyAgICAgcmV0dXJuIG5ld1Jlc3VsdDtcbi8vICAgfSwge30pO1xuLy8gfTtcblxuLy8gZXhwb3J0IGNvbnN0IHJlbWFwVXNlckRldGFpbHMgPSAoZmllbGRzLCB1c2VyRGV0YWlscywgZW5hYmxlRW1wdHlGaWVsZHMgPSBmYWxzZSwgc2V0RGVwZW5kZW50RmllbGQpID0+IHtcbi8vICAgdHJ5IHtcbi8vICAgICBjb25zdCBkZXRhaWxzUmVzdWx0ID0gXy5yZWR1Y2UoZmllbGRzLCAocmVzdWx0LCBmaWVsZCkgPT4ge1xuLy8gICAgICAgY29uc3QgbmV3UmVzdWx0ID0geyAuLi5yZXN1bHQgfTtcbi8vICAgICAgIGxldCB7IHNsdWcgfSA9IGZpZWxkO1xuXG4vLyAgICAgICBpZiAoc2x1Zykge1xuLy8gICAgICAgICBsZXQgZGV0YWlsVmFsdWUgPSBmaWVsZC52YWx1ZTtcblxuLy8gICAgICAgICBpZiAoc2x1ZyA9PT0gJ25hbWUnKSB7XG4vLyAgICAgICAgICAgY29uc3QgZmlyc3ROYW1lVmFsdWUgPSB1c2VyRGV0YWlscyAmJiB1c2VyRGV0YWlscy5maXJzdE5hbWU7XG4vLyAgICAgICAgICAgY29uc3QgZmFtaWx5TmFtZVZhbHVlID0gdXNlckRldGFpbHMgJiYgdXNlckRldGFpbHMuc3VybmFtZTtcblxuLy8gICAgICAgICAgIGRldGFpbFZhbHVlID0gZmlyc3ROYW1lVmFsdWUgfHwgZmFtaWx5TmFtZVZhbHVlID8gYCR7Zmlyc3ROYW1lVmFsdWUgfHwgJyd9JHtmaXJzdE5hbWVWYWx1ZSA/ICcgJyA6ICcnfSR7ZmFtaWx5TmFtZVZhbHVlIHx8ICcnfWAgOiBmaWVsZC52YWx1ZTtcbi8vICAgICAgICAgfSBlbHNlIGlmIChzbHVnID09PSAnZ2l2ZW5fbmFtZScpIHtcbi8vICAgICAgICAgICBzbHVnID0gJ2ZpcnN0TmFtZSc7XG4vLyAgICAgICAgIH0gZWxzZSBpZiAoc2x1ZyA9PT0gJ2ZhbWlseV9uYW1lJykge1xuLy8gICAgICAgICAgIHNsdWcgPSAnc3VybmFtZSc7XG4vLyAgICAgICAgIH0gZWxzZSBpZiAoc2x1ZyA9PT0gJ2JpcnRoX2RhdGUnKSB7XG4vLyAgICAgICAgICAgc2x1ZyA9ICdkYXRlT2ZCaXJ0aCc7XG4vLyAgICAgICAgIH0gZWxzZSBpZiAoc2x1ZyA9PT0gJ21vYmlsZV9udW1iZXInKSB7XG4vLyAgICAgICAgICAgc2x1ZyA9ICdjb250YWN0Jztcbi8vICAgICAgICAgfSBlbHNlIGlmIChzbHVnID09PSAncG9zdGFsJykge1xuLy8gICAgICAgICAgIHNsdWcgPSAncG9zdGFsX2NvZGUnO1xuLy8gICAgICAgICB9IGVsc2UgaWYgKHNsdWcgPT09ICdnZW5kZXJfaW5uZXInKSB7XG4vLyAgICAgICAgICAgc2x1ZyA9ICdnZW5kZXInO1xuLy8gICAgICAgICB9IGVsc2UgaWYgKHNsdWcgPT09ICdpc19zbW9rZXInKSB7XG4vLyAgICAgICAgICAgc2x1ZyA9ICdzbW9rZXInO1xuLy8gICAgICAgICB9XG5cbi8vICAgICAgICAgaWYgKHNsdWcgIT09ICduYW1lJykge1xuLy8gICAgICAgICAgIGRldGFpbFZhbHVlID0gdXNlckRldGFpbHNbc2x1Z10gfHwgZGV0YWlsVmFsdWU7XG4vLyAgICAgICAgIH1cblxuLy8gICAgICAgICBjb25zdCByYXdEZXRhaWxWYWx1ZSA9IGRldGFpbFZhbHVlO1xuXG4vLyAgICAgICAgIGlmIChkZXRhaWxWYWx1ZSkge1xuLy8gICAgICAgICAgIGlmICghZmllbGQudmFsdWUgJiYgZGV0YWlsVmFsdWUpIHtcbi8vICAgICAgICAgICAgIGlmIChmaWVsZC50eXBlID09PSAnc2VsZWN0Jykge1xuLy8gICAgICAgICAgICAgICBpZiAoZmllbGQuc2x1ZyA9PT0gJ3JlbGF0aW9uc2hpcCcgJiYgXy5pbmNsdWRlcyhkZXRhaWxWYWx1ZSwgJ015IENoaWxkJykpIHtcbi8vICAgICAgICAgICAgICAgICBkZXRhaWxWYWx1ZSA9ICdNeSBDaGlsZCc7XG4vLyAgICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICAgICAgZGV0YWlsVmFsdWUgPSB7IGRpc3BsYXlfbmFtZTogZGV0YWlsVmFsdWUsIHZhbHVlOiBkZXRhaWxWYWx1ZSB9O1xuLy8gICAgICAgICAgICAgfSBlbHNlIGlmIChmaWVsZC50eXBlID09PSAnZGF0ZScpIHtcbi8vICAgICAgICAgICAgICAgZGV0YWlsVmFsdWUgPSBtb21lbnQodXNlckRldGFpbHMuZGF0ZU9mQmlydGgpLnRvRGF0ZSgpO1xuLy8gICAgICAgICAgICAgICBpZiAoKGRldGFpbFZhbHVlIHx8ICcnKS50b1N0cmluZygpID09PSAnSW52YWxpZCBEYXRlJykge1xuLy8gICAgICAgICAgICAgICAgIGRldGFpbFZhbHVlID0gbW9tZW50KHVzZXJEZXRhaWxzLmRhdGVPZkJpcnRoLCAnREQvTU0vWVlZWScpLnRvRGF0ZSgpO1xuLy8gICAgICAgICAgICAgICAgIGlmICgoZGV0YWlsVmFsdWUgfHwgJycpLnRvU3RyaW5nKCkgPT09ICdJbnZhbGlkIERhdGUnKSB7XG4vLyAgICAgICAgICAgICAgICAgICBkZXRhaWxWYWx1ZSA9IG51bGw7XG4vLyAgICAgICAgICAgICAgICAgfVxuLy8gICAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgfVxuLy8gICAgICAgICB9XG5cbi8vICAgICAgICAgLy8gVE8gRE8sIGZpeCB0aGlzIGhhY2tcbi8vICAgICAgICAgaWYgKGZpZWxkLnR5cGUgPT09ICdzZWxlY3QnICYmIGRldGFpbFZhbHVlICYmICFkZXRhaWxWYWx1ZS52YWx1ZSkge1xuLy8gICAgICAgICAgIGRldGFpbFZhbHVlID0geyBkaXNwbGF5X25hbWU6IHJhd0RldGFpbFZhbHVlLCB2YWx1ZTogcmF3RGV0YWlsVmFsdWUgfTtcbi8vICAgICAgICAgfVxuXG4vLyAgICAgICAgIGlmIChlbmFibGVFbXB0eUZpZWxkcyB8fCAoIWVuYWJsZUVtcHR5RmllbGRzICYmIGRldGFpbFZhbHVlKSkge1xuLy8gICAgICAgICAgIG5ld1Jlc3VsdFtmaWVsZC5zbHVnXSA9IHsgdHlwZTogZmllbGQudHlwZSwgdmFsdWU6IGRldGFpbFZhbHVlIHx8IG51bGwgfTtcbi8vICAgICAgICAgfVxuLy8gICAgICAgfVxuLy8gICAgICAgcmV0dXJuIG5ld1Jlc3VsdDtcbi8vICAgICB9LCB7fSk7XG5cbi8vICAgICBpZiAoc2V0RGVwZW5kZW50RmllbGQpIHtcbi8vICAgICAgIGRldGFpbHNSZXN1bHQuc2F2ZV9kZXBlbmRlbnQgPSB7IHR5cGU6ICdzd2l0Y2gnLCB2YWx1ZTogZmFsc2UgfTtcbi8vICAgICAgIGRldGFpbHNSZXN1bHQuZGVwZW5kZW50X2luX3VzZSA9IHsgdHlwZTogJ2RlcGVuZGVudC1pbi11c2UnLCB2YWx1ZTogdHJ1ZSB9O1xuLy8gICAgICAgZGV0YWlsc1Jlc3VsdC5kZXBlbmRlbnQgPSB7IHR5cGU6ICdkZXBlbmRlbnQtZHJvcGRvd24nLCB2YWx1ZTogMCB9O1xuLy8gICAgIH1cblxuLy8gICAgIHJldHVybiBkZXRhaWxzUmVzdWx0O1xuLy8gICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuLy8gICB9XG5cbi8vICAgcmV0dXJuIHt9O1xuLy8gfTtcblxuLy8gLy8gSGlkZSBuYXYgYW5kIGZvb3RlciBpZiBtb2JpbGVcbi8vIGV4cG9ydCBjb25zdCBoaWRlTmF2Rm9vdGVySWZNb2JpbGUgPSAobG9jYXRpb24sIGRvU2V0SW50ZXJjb21WaXNpYmlsaXR5KSA9PiB7XG4vLyAgIGlmIChsb2NhdGlvbiAmJiBsb2NhdGlvbi5wYXRobmFtZSAmJiBfLmluY2x1ZGVzKGxvY2F0aW9uLnBhdGhuYW1lLCAnbW9iaWxlJykpIHtcbi8vICAgICAkKCcubmF2aWdhdGlvbicpLmNzcygnY3NzVGV4dCcsICdkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7Jyk7XG4vLyAgICAgJCgnLmZvb3RlcicpLmNzcygnY3NzVGV4dCcsICdkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7Jyk7XG5cbi8vICAgICBkb1NldEludGVyY29tVmlzaWJpbGl0eShmYWxzZSk7XG4vLyAgIH1cbi8vIH07XG5cbmV4cG9ydCBjb25zdCBoaWRlTmF2Rm9vdGVyID0gKCkgPT4ge1xuICAkKCcubmF2YmFyJykuY3NzKCdjc3NUZXh0JywgJ2Rpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsnKTtcbiAgJCgnLm1haW4tY29udGFpbmVyLWZsdWlkJykuY3NzKCdjc3NUZXh0JywgJ3BhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7Jyk7XG4gICQoJy5mb290ZXInKS5jc3MoJ2Nzc1RleHQnLCAnZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OycpO1xuICAkKCcuc3Vic2NyaWJlLWNvbnRhaW5lcicpLmNzcygnY3NzVGV4dCcsICdkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7Jyk7XG5cbiAgLy8gaWYgKGRvU2V0SW50ZXJjb21WaXNpYmlsaXR5KSB7XG4gIC8vICAgZG9TZXRJbnRlcmNvbVZpc2liaWxpdHkoZmFsc2UpO1xuICAvLyB9XG59O1xuXG5leHBvcnQgY29uc3Qgc2hvd05hdkZvb3RlciA9ICgpID0+IHtcbiAgJCgnLm5hdmJhcicpLmNzcygnY3NzVGV4dCcsICcnKTtcbiAgJCgnLm1haW4tY29udGFpbmVyLWZsdWlkJykuY3NzKCdjc3NUZXh0JywgJycpO1xuICAkKCcuZm9vdGVyJykuY3NzKCdjc3NUZXh0JywgJycpO1xuICAkKCcuc3Vic2NyaWJlLWNvbnRhaW5lcicpLmNzcygnY3NzVGV4dCcsICcnKTtcblxuICAvLyBpZiAoZG9TZXRJbnRlcmNvbVZpc2liaWxpdHkpIHtcbiAgLy8gICBkb1NldEludGVyY29tVmlzaWJpbGl0eSh0cnVlKTtcbiAgLy8gfVxufTtcblxuZXhwb3J0IGNvbnN0IGV4dHJhY3RTZWFyY2hQYXJhbXMgPSAoc2VhcmNoU3RyaW5nKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3Qgc2VhcmNoID0gc2VhcmNoU3RyaW5nLnNsaWNlKDEpO1xuICAgIGNvbnN0IHNwbGl0UGFydHMgPSBzZWFyY2guc3BsaXQoJyYnKTtcbiAgICBjb25zdCBwYXJhbXMgPSBfLnJlZHVjZShzcGxpdFBhcnRzLCAocmVzdWx0LCBwYXJ0KSA9PiB7XG4gICAgICBjb25zdCBuZXdSZXN1bHQgPSB7IC4uLnJlc3VsdCB9O1xuICAgICAgY29uc3Qgc3BsaXQgPSBwYXJ0LnNwbGl0KCc9Jyk7XG5cbiAgICAgIGlmIChzcGxpdC5sZW5ndGggPiAxICYmIHNwbGl0WzBdICE9PSAnJykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgICAgbmV3UmVzdWx0W3NwbGl0WzBdXSA9IHNwbGl0WzFdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbmV3UmVzdWx0O1xuICAgIH0sIHt9KTtcblxuICAgIHJldHVybiBfLmlzRW1wdHkocGFyYW1zKSA/IG51bGwgOiBwYXJhbXM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuXG4vLyBleHBvcnQgY29uc3Qgcm91dGVIYW5kbGVyID0gKGJhc2VSb3V0ZSwgZm9ybVN0YXRlLCBmb3JtSW5kZXgsIG1hdGNoLCBoaXN0b3J5LCBmb3JtU3RhdGVzID0gbnVsbCwgcHJldlBhdGhOYW1lID0gbnVsbCwgc2V0Rm9ybVN0YXRlLCB0cmlnZ2VyU3RhdGUsIGRvVHJpZ2dlckluc3VyYW5jZUZvcm1TdGF0ZSkgPT4ge1xuLy8gICBsZXQgaW5kZXggPSBmb3JtU3RhdGU7XG4vLyAgIGNvbnN0IGZvcm1TdGF0ZXNUb1VzZSA9IGZvcm1TdGF0ZXMgfHwgRk9STVNUQVRFUztcblxuLy8gICB0cnkge1xuLy8gICAgIGlmIChtYXRjaC5wYXJhbXMucGFnZSkge1xuLy8gICAgICAgY29uc3QgbmV3UGF0aCA9IF8uZmluZChmb3JtU3RhdGVzVG9Vc2UsIHN0YXRlID0+IF8uaW5jbHVkZXMoc3RhdGUucGF0aCwgbWF0Y2gucGFyYW1zLnBhZ2UpKTtcbi8vICAgICAgIGlmIChmb3JtU3RhdGVzVG9Vc2UuU1VCTUlUVEVEICYmIGZvcm1TdGF0ZSA9PT0gZm9ybVN0YXRlc1RvVXNlLlNVQk1JVFRFRC5pbmRleCAmJiBuZXdQYXRoLmluZGV4ICE9PSBmb3JtU3RhdGVzVG9Vc2UuU1VCTUlUVEVELmluZGV4KSB7XG4vLyAgICAgICAgIGxldCBleHRyYVVSTCA9ICcnO1xuLy8gICAgICAgICBpZiAoaGlzdG9yeS5wYXJhbXMpIHtcbi8vICAgICAgICAgICBpZiAoaGlzdG9yeS5wYXJhbXMuaW5zdXJlcikge1xuLy8gICAgICAgICAgICAgZXh0cmFVUkwgPSBgJHtleHRyYVVSTH0vJHtoaXN0b3J5LnBhcmFtcy5pbnN1cmVyfWA7XG4vLyAgICAgICAgICAgfVxuXG4vLyAgICAgICAgICAgaWYgKGhpc3RvcnkucGFyYW1zLnByb2R1Y3QpIHtcbi8vICAgICAgICAgICAgIGV4dHJhVVJMID0gYCR7ZXh0cmFVUkx9LyR7aGlzdG9yeS5wYXJhbXMucHJvZHVjdH1gO1xuLy8gICAgICAgICAgIH1cblxuLy8gICAgICAgICAgIGlmIChoaXN0b3J5LnBhcmFtcy5jaGVja291dCkge1xuLy8gICAgICAgICAgICAgZXh0cmFVUkwgPSBgJHtleHRyYVVSTH0vJHtoaXN0b3J5LnBhcmFtcy5jaGVja291dH1gO1xuLy8gICAgICAgICAgIH1cbi8vICAgICAgICAgfVxuLy8gICAgICAgICBoaXN0b3J5LnB1c2goYCR7YmFzZVJvdXRlfSR7Zm9ybVN0YXRlc1RvVXNlLlNVQk1JVFRFRC5wYXRofSR7ZXh0cmFVUkx9YCk7XG4vLyAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuLy8gICAgICAgICBpbmRleCA9IGZvcm1TdGF0ZXNUb1VzZS5TVUJNSVRURUQuaW5kZXg7XG4vLyAgICAgICB9IGVsc2UgaWYgKGluZGV4IDwgbmV3UGF0aC5pbmRleCkge1xuLy8gICAgICAgICBpZiAocHJldlBhdGhOYW1lICYmIF8uaW5jbHVkZXMocHJldlBhdGhOYW1lLCBiYXNlUm91dGUpKSB7XG4vLyAgICAgICAgICAgaGlzdG9yeS5nb0JhY2soKTtcbi8vICAgICAgICAgfSBlbHNlIHtcbi8vICAgICAgICAgICBoaXN0b3J5LnJlcGxhY2UoYCR7YmFzZVJvdXRlfWApO1xuLy8gICAgICAgICB9XG4vLyAgICAgICB9IGVsc2Uge1xuLy8gICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbi8vICAgICAgICAgaW5kZXggPSBuZXdQYXRoLmluZGV4O1xuLy8gICAgICAgfVxuLy8gICAgIH0gZWxzZSBpZiAoL1xcL2Zsb3dcXC8vLnRlc3QoaGlzdG9yeS5sb2NhdGlvbi5wYXRobmFtZSkpIHtcbi8vICAgICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9IGV4dHJhY3RTZWFyY2hQYXJhbXMoaGlzdG9yeS5sb2NhdGlvbi5zZWFyY2gpIHx8IHt9O1xuLy8gICAgICAgY29uc3QgbmV3UGF0aCA9IF8uZmluZChmb3JtU3RhdGVzVG9Vc2UsIHN0YXRlID0+IChwcmV2UGF0aE5hbWUgJiYgZm9ybVN0YXRlID4gMSA/IHN0YXRlLmluZGV4ID09PSBmb3JtU3RhdGUgOiBzdGF0ZS5zdGVwID09PSAwKSAmJiBfLmluY2x1ZGVzKHN0YXRlLnBhdGgsIG1hdGNoLnBhcmFtcy5pbnN1cmVyKSAmJiBfLmluY2x1ZGVzKHN0YXRlLnBhdGgsIG1hdGNoLnBhcmFtcy5wcm9kdWN0KSk7XG4vLyAgICAgICBjb25zdCBpbmNvbWluZ1BhdGggPSBfLmZpbmQoZm9ybVN0YXRlc1RvVXNlLCBzdGF0ZSA9PiBzdGF0ZS5zdGVwID09PSAoK3NlYXJjaFBhcmFtcy5zdGVwIHx8IDApICYmIF8uaW5jbHVkZXMoc3RhdGUucGF0aCwgbWF0Y2gucGFyYW1zLmluc3VyZXIpICYmIF8uaW5jbHVkZXMoc3RhdGUucGF0aCwgbWF0Y2gucGFyYW1zLnByb2R1Y3QpKTtcblxuLy8gICAgICAgbGV0IHNlYXJjaFN0cmluZyA9ICcnO1xuLy8gICAgICAgZGVsZXRlIHNlYXJjaFBhcmFtcy5zdGVwO1xuLy8gICAgICAgaWYgKCFpc0VtcHR5KHNlYXJjaFBhcmFtcykpIHtcbi8vICAgICAgICAgc2VhcmNoU3RyaW5nID0gXy5yZWR1Y2Uoc2VhcmNoUGFyYW1zLCAociwgcCwgaykgPT4gYCR7cn0ke2t9PSR7cH0mYCwgL1xcPy8udGVzdChuZXdQYXRoLnBhdGgpID8gJyYnIDogJz8nKTtcbi8vICAgICAgICAgc2VhcmNoU3RyaW5nID0gc2VhcmNoU3RyaW5nLnNsaWNlKDAsIC0xKTtcbi8vICAgICAgIH1cblxuLy8gICAgICAgLy8gbGV0IHJlZmVycmFsU2VhcmNoID0gJyc7XG4vLyAgICAgICAvLyBpZiAoc2VhcmNoUGFyYW1zLmMpIHtcbi8vICAgICAgIC8vICAgcmVmZXJyYWxTZWFyY2ggPSAvXFw/Ly50ZXN0KG5ld1BhdGgucGF0aCkgPyBgJmM9JHtzZWFyY2hQYXJhbXMuY31gIDogYD9jPSR7c2VhcmNoUGFyYW1zLmN9YDtcbi8vICAgICAgIC8vIH1cblxuLy8gICAgICAgaWYgKG5ld1BhdGguZW5kU3RhdGUgJiYgaW5jb21pbmdQYXRoLnN0ZXAgPCBuZXdQYXRoLnN0ZXApIHtcbi8vICAgICAgICAgaGlzdG9yeS5yZXBsYWNlKGAke2Jhc2VSb3V0ZX0ke25ld1BhdGgucGF0aH0ke3NlYXJjaFN0cmluZ31gKTtcbi8vICAgICAgIH0gZWxzZSBpZiAoIXByZXZQYXRoTmFtZSAmJiBuZXdQYXRoKSB7XG4vLyAgICAgICAgIGhpc3RvcnkucmVwbGFjZShgJHtiYXNlUm91dGV9JHtuZXdQYXRoLnBhdGh9JHtzZWFyY2hTdHJpbmd9YCk7XG4vLyAgICAgICAgICh7IGluZGV4IH0gPSBuZXdQYXRoKTtcbi8vICAgICAgIH0gZWxzZSBpZiAodHJpZ2dlclN0YXRlICYmIG5ld1BhdGgpIHtcbi8vICAgICAgICAgKHsgaW5kZXggfSA9IG5ld1BhdGgpO1xuLy8gICAgICAgICBkb1RyaWdnZXJJbnN1cmFuY2VGb3JtU3RhdGUoZmFsc2UpO1xuLy8gICAgICAgfSBlbHNlIGlmIChwcmV2UGF0aE5hbWUgJiYgaW5jb21pbmdQYXRoLnBhdGggPCBuZXdQYXRoLnBhdGgpIHtcbi8vICAgICAgICAgKHsgaW5kZXggfSA9IGluY29taW5nUGF0aCk7XG4vLyAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gc2V0Rm9ybVN0YXRlKGluY29taW5nUGF0aC5pbmRleCkpO1xuLy8gICAgICAgfSBlbHNlIGlmIChpbmNvbWluZ1BhdGguc3RlcCAhPT0gMCAmJiBwcmV2UGF0aE5hbWUgPT09IGAke2Jhc2VSb3V0ZX0ke25ld1BhdGgucGF0aH1gICYmIGluY29taW5nUGF0aC5zdGVwID4gbmV3UGF0aC5zdGVwKSB7XG4vLyAgICAgICAgIGhpc3RvcnkuZ29CYWNrKCk7XG4vLyAgICAgICB9IGVsc2Uge1xuLy8gICAgICAgICAoeyBpbmRleCB9ID0gbmV3UGF0aCk7XG4vLyAgICAgICB9XG4vLyAgICAgfSBlbHNlIHtcbi8vICAgICAgIGluZGV4ID0gMDtcbi8vICAgICB9XG4vLyAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4vLyAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuLy8gICB9XG5cbi8vICAgcmV0dXJuICh7XG4vLyAgICAgZm9ybUluZGV4OiBmb3JtSW5kZXggIT09IGluZGV4ID8gaW5kZXggOiBudWxsLFxuLy8gICB9KTtcbi8vIH07XG5cbi8vIGV4cG9ydCBjb25zdCBnZXRGaWVsZHNGcm9tRm9ybXMgPSAocGFnZXMpID0+IHtcbi8vICAgbGV0IGFsbEZpZWxkcyA9IFtdO1xuLy8gICB0cnkge1xuLy8gICAgIGFsbEZpZWxkcyA9IF8ucmVkdWNlKHBhZ2VzLCAocmVzdWx0LCBwYWdlKSA9PiB7XG4vLyAgICAgICBfLmVhY2gocGFnZS5mb3JtcywgKGYpID0+IHtcbi8vICAgICAgICAgcmVzdWx0LnB1c2goZik7XG4vLyAgICAgICB9KTtcbi8vICAgICAgIHJldHVybiByZXN1bHQ7XG4vLyAgICAgfSwgW10pO1xuLy8gICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuLy8gICB9XG5cbi8vICAgcmV0dXJuIGFsbEZpZWxkcztcbi8vIH07XG5cbi8vIGV4cG9ydCBjb25zdCBnZW5lcmF0ZVJlcXVlc3REYXRhID0gKGFsbEZpZWxkcywgdmFsdWVzKSA9PiB7XG4vLyAgIGxldCByZXF1ZXN0RGF0YSA9IG51bGw7XG4vLyAgIHRyeSB7XG4vLyAgICAgcmVxdWVzdERhdGEgPSB7fTtcbi8vICAgICBfLmVhY2goYWxsRmllbGRzLCAoZmllbGQpID0+IHtcbi8vICAgICAgIGNvbnN0IHZhbHVlID0gdmFsdWVzW2ZpZWxkLnNsdWddO1xuXG4vLyAgICAgICBpZiAodmFsdWUpIHtcbi8vICAgICAgICAgY29uc3QgZXJyb3JSZXN1bHQgPSB2YWxpZGF0ZUZvcm1WYWx1ZShmaWVsZC5zbHVnLCB2YWx1ZSwgdmFsdWVzLCBhbGxGaWVsZHMpO1xuLy8gICAgICAgICBpZiAoZXJyb3JSZXN1bHQgJiYgZXJyb3JSZXN1bHRbZmllbGQuc2x1Z10pIHtcbi8vICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlcXVlc3QgZGF0YSBpcyBpbnZhbGlkJyk7XG4vLyAgICAgICAgIH1cblxuLy8gICAgICAgICBjb25zdCBwYXJzZWRWYWx1ZSA9IGZpZWxkLnR5cGUgPT09ICdkYXRlJyB8fCBmaWVsZC50eXBlID09PSAnZW5kX2RhdGUnID8gdmFsdWUudmFsdWUudG9JU09TdHJpbmcoKSA6IHZhbHVlLnZhbHVlO1xuLy8gICAgICAgICBpZiAocGFyc2VkVmFsdWUpIHtcbi8vICAgICAgICAgICByZXF1ZXN0RGF0YVtmaWVsZC5zbHVnXSA9IHBhcnNlZFZhbHVlO1xuLy8gICAgICAgICB9XG4vLyAgICAgICB9XG4vLyAgICAgfSk7XG4vLyAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4vLyAgIH1cblxuLy8gICByZXR1cm4gcmVxdWVzdERhdGE7XG4vLyB9O1xuXG4vLyBleHBvcnQgY29uc3QgbnVtYmVyV2l0aENvbW1hcyA9ICh4KSA9PiB7XG4vLyAgIHRyeSB7XG4vLyAgICAgbGV0IHZhbHVlID0geC50b0ZpeGVkKDIpLnRvU3RyaW5nKCkucmVwbGFjZSgvXFxCKD89KFxcZHszfSkrKD8hXFxkKSkvZywgJywnKTtcbi8vICAgICBjb25zdCBzcGxpdHRlZCA9IHZhbHVlLnRvU3RyaW5nKCkuc3BsaXQoJy4nKTtcbi8vICAgICBpZiAoc3BsaXR0ZWQubGVuZ3RoID09PSAxKSB7XG4vLyAgICAgICB2YWx1ZSA9IGAke3ZhbHVlfS4wMGA7XG4vLyAgICAgfSBlbHNlIGlmIChzcGxpdHRlZC5sZW5ndGggPT09IDIgJiYgc3BsaXR0ZWRbMV0ubGVuZ3RoID09PSAxKSB7XG4vLyAgICAgICB2YWx1ZSA9IGAke3ZhbHVlfTBgO1xuLy8gICAgIH1cbi8vICAgICByZXR1cm4gdmFsdWU7XG4vLyAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgcmV0dXJuIHg7XG4vLyAgIH1cbi8vIH07XG5cbi8vIGV4cG9ydCBjb25zdCBnZXRBbXBUYWdzID0gKHNlbGVjdGVkUGxhbkRhdGEsIHBsYW5UeXBlKSA9PiB7XG4vLyAgIHRyeSB7XG4vLyAgICAgbGV0IGRpc2NvdW50ID0gbnVsbDtcbi8vICAgICBfLm1hcChzZWxlY3RlZFBsYW5EYXRhLmluZm8uZGlzY291bnQsIChkYXRhKSA9PiB7XG4vLyAgICAgICBkaXNjb3VudCA9IGRhdGEuZGlzcGxheTtcbi8vICAgICB9KTtcbi8vICAgICBpZiAoXy5pc0VtcHR5KGRpc2NvdW50KSkge1xuLy8gICAgICAgZGlzY291bnQgPSAnMCUnO1xuLy8gICAgIH1cblxuLy8gICAgIHJldHVybiAoe1xuLy8gICAgICAgdHlwZTogcGxhblR5cGUsXG4vLyAgICAgICBwYXJ0bmVyOiBzZWxlY3RlZFBsYW5EYXRhLmluZm8uaW5zdXJlcl9zbHVnLFxuLy8gICAgICAgcHJpY2U6IHNlbGVjdGVkUGxhbkRhdGEucG9saWN5X2luZm9bcGxhblR5cGVdLnByZW1pdW0ubmV0X3ByaWNlLFxuLy8gICAgICAgZGlzY291bnQsXG4vLyAgICAgfSk7XG4vLyAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgY29uc29sZS5sb2coYFRyYXZlbCBjaG9vc2UgcGxhbiBCdXkgbm93IEFtcCB0YWcgZmFpbGVkOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4vLyAgIH1cblxuLy8gICByZXR1cm4ge307XG4vLyB9O1xuXG5leHBvcnQgY29uc3QgZ2V0Rm9ybVZhbHVlID0gKHZhbHVlSXRlbSwgZm9yRGlzcGxheSkgPT4ge1xuICB0cnkge1xuICAgIGlmICh2YWx1ZUl0ZW0pIHtcbiAgICAgIGlmICh2YWx1ZUl0ZW0udHlwZSA9PT0gJ3NlbGVjdCcpIHtcbiAgICAgICAgcmV0dXJuIGZvckRpc3BsYXkgPyB2YWx1ZUl0ZW0udmFsdWUudmFsdWUudG9TdHJpbmcoKSA6IHZhbHVlSXRlbS52YWx1ZS52YWx1ZTtcbiAgICAgIH1cbiAgICAgIGlmICh2YWx1ZUl0ZW0udHlwZSA9PT0gJ211bHRpcGxlX3NlbGVjdCcpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gXy5tYXAodmFsdWVJdGVtLnZhbHVlLCAodikgPT4gdi52YWx1ZSk7XG4gICAgICAgIHJldHVybiBmb3JEaXNwbGF5ID8gcmVzdWx0LnRvU3RyaW5nKCkucmVwbGFjZSgvLC9nLCAnLCAnKSA6IHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIGlmIChmb3JEaXNwbGF5ICYmIHZhbHVlSXRlbS50eXBlID09PSAnZGF0ZScpIHtcbiAgICAgICAgcmV0dXJuIG1vbWVudCh2YWx1ZUl0ZW0udmFsdWUpLmZvcm1hdCgnREQgTU1NIFlZWVknKTtcbiAgICAgIH1cblxuICAgICAgbGV0IGZpbmFsVmFsdWUgPSB2YWx1ZUl0ZW0udmFsdWU7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgZmluYWxWYWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICBmaW5hbFZhbHVlID0gZmluYWxWYWx1ZS50cmltKCk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZpbmFsVmFsdWU7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuXG4vLyBleHBvcnQgY29uc3QgcmV2ZXJ0Rm9ybVZhbHVlID0gKGZpZWxkLCBrZXksIHZhbHVlKSA9PiB7XG4vLyAgIHRyeSB7XG4vLyAgICAgaWYgKGZpZWxkICYmIGtleSkge1xuLy8gICAgICAgbGV0IHYgPSB2YWx1ZTtcbi8vICAgICAgIGlmIChmaWVsZC50eXBlID09PSAnc2VsZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZSAhPT0gJycpIHtcbi8vICAgICAgICAgdiA9IHsgZGlzcGxheV9uYW1lOiB2YWx1ZSwgdmFsdWUgfTtcbi8vICAgICAgIH0gZWxzZSBpZiAoZmllbGQudHlwZSA9PT0gJ211bHRpcGxlX3NlbGVjdCcgJiYgIV8uaXNFbXB0eSh2YWx1ZSkpIHtcbi8vICAgICAgICAgdiA9IF8ubWFwKHZhbHVlLCB2MiA9PiAoeyBkaXNwbGF5X25hbWU6IHYyLCB2YWx1ZTogdjIgfSkpO1xuLy8gICAgICAgfSBlbHNlIGlmIChmaWVsZC50eXBlID09PSAnbnVtYmVyJyAmJiB2YWx1ZSkge1xuLy8gICAgICAgICAvLyB2ID0gcGFyc2VJbnQodmFsdWUudG9TdHJpbmcoKSwgMTApO1xuLy8gICAgICAgfSBlbHNlIGlmIChmaWVsZC50eXBlID09PSAnZGF0ZScgJiYgdmFsdWUpIHtcbi8vICAgICAgICAgdiA9IG1vbWVudCh2YWx1ZSwgJ0REL01NL1lZWVknKS50b0RhdGUoKTtcbi8vICAgICAgICAgaWYgKCF2IHx8IHYudG9TdHJpbmcoKSA9PT0gJ0ludmFsaWQgRGF0ZScpIHtcbi8vICAgICAgICAgICB2ID0gbW9tZW50KHZhbHVlKS50b0RhdGUoKTtcbi8vICAgICAgICAgfVxuLy8gICAgICAgfVxuXG4vLyAgICAgICByZXR1cm4geyB0eXBlOiBmaWVsZC50eXBlLCB2YWx1ZTogdiB9O1xuLy8gICAgIH1cbi8vICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbi8vICAgfVxuXG4vLyAgIHJldHVybiBudWxsO1xuLy8gfTtcblxuLy8gZXhwb3J0IGNvbnN0IHJldmVydEZvcm1WYWx1ZXNVc2luZ0RlZmF1bHQgPSAoZGVmYXVsdFZhbHVlcywgdmFsdWVzLCBvbGRWYWx1ZXMgPSB7fSkgPT4ge1xuLy8gICB0cnkge1xuLy8gICAgIHJldHVybiBfLnJlZHVjZShkZWZhdWx0VmFsdWVzLCAocmVzdWx0LCBmaWVsZCwga2V5KSA9PiB7XG4vLyAgICAgICBjb25zdCBuZXdSZXN1bHQgPSB7IC4uLnJlc3VsdCB9O1xuLy8gICAgICAgY29uc3QgdmFsdWUgPSByZXZlcnRGb3JtVmFsdWUoZmllbGQsIGtleSwgdmFsdWVzW2tleV0pO1xuLy8gICAgICAgbmV3UmVzdWx0W2tleV0gPSB2YWx1ZSAmJiB2YWx1ZS52YWx1ZSAmJiB2YWx1ZS52YWx1ZSAhPT0gJycgPyB2YWx1ZSA6IG9sZFZhbHVlc1trZXldO1xuXG4vLyAgICAgICByZXR1cm4gbmV3UmVzdWx0O1xuLy8gICAgIH0sIHt9KTtcbi8vICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbi8vICAgfVxuXG4vLyAgIHJldHVybiBudWxsO1xuLy8gfTtcblxuLy8gZXhwb3J0IGNvbnN0IHJldmVydEZvcm1WYWx1ZXMgPSAoZmllbGRzLCB2YWx1ZXMpID0+IHtcbi8vICAgdHJ5IHtcbi8vICAgICByZXR1cm4gXy5yZWR1Y2UoZmllbGRzLCAocmVzdWx0LCBmaWVsZCkgPT4ge1xuLy8gICAgICAgY29uc3QgbmV3UmVzdWx0ID0geyAuLi5yZXN1bHQgfTtcbi8vICAgICAgIGNvbnN0IHZhbHVlID0gcmV2ZXJ0Rm9ybVZhbHVlKGZpZWxkLCBmaWVsZC5zbHVnLCB2YWx1ZXNbZmllbGQuc2x1Z10pO1xuLy8gICAgICAgbmV3UmVzdWx0W2ZpZWxkLnNsdWddID0gdmFsdWUgJiYgdmFsdWUudmFsdWUgJiYgdmFsdWUudmFsdWUgIT09ICcnID8gdmFsdWUgOiB2YWx1ZXNbZmllbGQuc2x1Z107XG5cbi8vICAgICAgIHJldHVybiBuZXdSZXN1bHQ7XG4vLyAgICAgfSwge30pO1xuLy8gICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuLy8gICB9XG5cbi8vICAgcmV0dXJuIG51bGw7XG4vLyB9O1xuXG4vLyBleHBvcnQgY29uc3QgcGFyc2VDb25zdGFudHMgPSAoY29uc3RhbnRzKSA9PiB7XG4vLyAgIGNvbnN0IHJlc3VsdHMgPSB7XG4vLyAgICAgZ2VuZGVyOiBbXG4vLyAgICAgICAnTWFsZScsXG4vLyAgICAgICAnRmVtYWxlJyxcbi8vICAgICBdLFxuLy8gICAgIG1hcml0YWxTdGF0dXM6IFtcbi8vICAgICAgICdTaW5nbGUnLFxuLy8gICAgICAgJ01hcnJpZWQnLFxuLy8gICAgIF0sXG4vLyAgICAgcmFjZTogW1xuLy8gICAgICAgJ0NoaW5lc2UnLFxuLy8gICAgICAgJ01hbGF5Jyxcbi8vICAgICAgICdJbmRpYW4nLFxuLy8gICAgICAgJ0V1cmFzaWFuJyxcbi8vICAgICAgICdPdGhlcnMnLFxuLy8gICAgIF0sXG4vLyAgICAgc21va2VyOiBbXG4vLyAgICAgICAnU21va2VyJyxcbi8vICAgICAgICdOb24tc21va2VyJyxcbi8vICAgICBdLFxuLy8gICB9O1xuXG4vLyAgIGNvbnN0IGluaXRpYWxDb3VudHJpZXMgPSBbXG4vLyAgICAgJ01hbGF5c2lhJyxcbi8vICAgICAnVGhhaWxhbmQnLFxuLy8gICAgICdJbmRvbmVzaWEnLFxuLy8gICAgICdQaGlsaXBwaW5lcycsXG4vLyAgICAgJ1ZpZXRuYW0nLFxuLy8gICAgICdDYW1ib2RpYScsXG4vLyAgICAgJ0NoaW5hJyxcbi8vICAgICAnSW5kaWEnLFxuLy8gICAgICdKYXBhbicsXG4vLyAgICAgJ1NvdXRoIEtvcmVhJyxcbi8vICAgICAnQXVzdHJhbGlhJyxcbi8vICAgXTtcblxuLy8gICB0cnkge1xuLy8gICAgIGxldCBjb3VudHJpZXMgPSBfLnJlZHVjZShjb25zdGFudHMuY291bnRyaWVzLCAocmVzdWx0LCBkYXRhKSA9PiB7XG4vLyAgICAgICByZXN1bHQucHVzaChkYXRhLm5hbWUpO1xuLy8gICAgICAgcmV0dXJuIHJlc3VsdDtcbi8vICAgICB9LCBbXSk7XG4vLyAgICAgXy5yZW1vdmUoY291bnRyaWVzLCBpdGVtID0+IF8uaW5kZXhPZihpbml0aWFsQ291bnRyaWVzLCBpdGVtKSAhPT0gLTEpO1xuLy8gICAgIGNvdW50cmllcyA9IFsuLi5pbml0aWFsQ291bnRyaWVzLCAuLi5jb3VudHJpZXNdO1xuXG4vLyAgICAgcmVzdWx0cy5jb3VudHJpZXMgPSBjb3VudHJpZXM7XG5cbi8vICAgICByZXN1bHRzLm5hdGlvbmFsaXRpZXMgPSBfLnJlZHVjZShjb25zdGFudHMubmF0aW9uYWxpdGllcywgKHJlc3VsdCwgZGF0YSkgPT4ge1xuLy8gICAgICAgcmVzdWx0LnB1c2goZGF0YS5uYW1lKTtcbi8vICAgICAgIHJldHVybiByZXN1bHQ7XG4vLyAgICAgfSwgW10pO1xuXG4vLyAgICAgcmVzdWx0cy5vY2N1cGF0aW9ucyA9IF8ucmVkdWNlKGNvbnN0YW50cy5vY2N1cGF0aW9ucywgKHJlc3VsdCwgZGF0YSkgPT4ge1xuLy8gICAgICAgcmVzdWx0LnB1c2goZGF0YS5uYW1lKTtcbi8vICAgICAgIHJldHVybiByZXN1bHQ7XG4vLyAgICAgfSwgW10pO1xuXG4vLyAgICAgcmVzdWx0cy5yZWxhdGlvbnNoaXBzID0gXy5yZWR1Y2UoY29uc3RhbnRzLnJlbGF0aW9uc2hpcHMsIChyZXN1bHQsIGRhdGEpID0+IHtcbi8vICAgICAgIGlmIChkYXRhLm5hbWUgIT09ICdNeXNlbGYnICYmICFfLmluY2x1ZGVzKGRhdGEubmFtZSwgJ0NoaWxkJykpIHtcbi8vICAgICAgICAgcmVzdWx0LnB1c2goZGF0YS5uYW1lKTtcbi8vICAgICAgICAgaWYgKHJlc3VsdC5sZW5ndGggPT09IDEpIHtcbi8vICAgICAgICAgICByZXN1bHQucHVzaCgnTXkgQ2hpbGQnKTtcbi8vICAgICAgICAgfVxuLy8gICAgICAgfVxuLy8gICAgICAgcmV0dXJuIHJlc3VsdDtcbi8vICAgICB9LCBbXSk7XG5cbi8vICAgICByZXN1bHRzLmlkVHlwZXMgPSBfLnJlZHVjZShjb25zdGFudHMuaWRfdHlwZXMsIChyZXN1bHQsIGRhdGEpID0+IHtcbi8vICAgICAgIHJlc3VsdC5wdXNoKGRhdGEubmFtZSk7XG4vLyAgICAgICByZXR1cm4gcmVzdWx0O1xuLy8gICAgIH0sIFtdKTtcblxuLy8gICAgIHJlc3VsdHMuaW5kdXN0cmllcyA9IF8ucmVkdWNlKGNvbnN0YW50cy5pbmR1c3RyaWVzLCAocmVzdWx0LCBkYXRhKSA9PiB7XG4vLyAgICAgICByZXN1bHQucHVzaChkYXRhLm5hbWUpO1xuLy8gICAgICAgcmV0dXJuIHJlc3VsdDtcbi8vICAgICB9LCBbXSk7XG5cbi8vICAgICBjb25zdCBiYW5rcyA9IGNvbnN0YW50cy5iYW5rcyAmJiBjb25zdGFudHMuYmFua3MucmVmZXJyYWwgPyBjb25zdGFudHMuYmFua3MucmVmZXJyYWwgOiBbXTtcbi8vICAgICByZXN1bHRzLmJhbmtzID0gXy5yZWR1Y2UoYmFua3MsIChyZXN1bHQsIGRhdGEpID0+IHtcbi8vICAgICAgIHJlc3VsdC5wdXNoKGRhdGEubmFtZSk7XG4vLyAgICAgICByZXR1cm4gcmVzdWx0O1xuLy8gICAgIH0sIFtdKTtcblxuLy8gICAgIHJldHVybiByZXN1bHRzO1xuLy8gICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgIHJldHVybiBudWxsO1xuLy8gICB9XG4vLyB9O1xuXG4vLyBleHBvcnQgY29uc3QgZ2V0V3JhcHBlZENvbXBvbmVudCA9IChub2RlKSA9PiB7XG4vLyAgIGxldCBuZXdOb2RlID0gbm9kZTtcbi8vICAgdHJ5IHtcbi8vICAgICBmb3IgKDsgOykge1xuLy8gICAgICAgaWYgKCFuZXdOb2RlLmdldFdyYXBwZWRDb21wb25lbnQpIHtcbi8vICAgICAgICAgYnJlYWs7XG4vLyAgICAgICB9XG5cbi8vICAgICAgIG5ld05vZGUgPSBuZXdOb2RlLmdldFdyYXBwZWRDb21wb25lbnQoKTtcbi8vICAgICB9XG4vLyAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4vLyAgIH1cblxuLy8gICByZXR1cm4gbmV3Tm9kZTtcbi8vIH07XG5cbi8vIGV4cG9ydCBjb25zdCBoYW5kbGVQb3N0Q29kZSA9IGFzeW5jICh2YWx1ZXMsIG9uQ2hhbmdlRGV0YWlsVmFsdWUsIGZvcm1OYW1lID0gbnVsbCkgPT4ge1xuLy8gICB0cnkge1xuLy8gICAgIGlmICh2YWx1ZXMpIHtcbi8vICAgICAgIGNvbnN0IHBvc3Rjb2RlID0gdmFsdWVzLnBvc3RhbC52YWx1ZTtcbi8vICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGdldFBvc3RhbChwb3N0Y29kZSk7XG4vLyAgICAgICBpZiAocmVzdWx0KSB7XG4vLyAgICAgICAgIC8vIGNvbnN0IHN0cmVldE5hbWUgPSByZXN1bHQubmFtZSA9PT0gJycgPyAnJyA6IGAke3Jlc3VsdC5uYW1lfSBgO1xuLy8gICAgICAgICBjb25zdCBzdHJlZXQgPSByZXN1bHQuc3RyZWV0ID09PSAnJyA/ICcnIDogYCR7cmVzdWx0LnN0cmVldH0gYDtcbi8vICAgICAgICAgY29uc3QgYmxvY2sgPSByZXN1bHQuYmxvY2sgPT09ICcnID8gJycgOiBgJHtyZXN1bHQuYmxvY2t9IGA7XG4vLyAgICAgICAgIC8vIGxldCBjb25jYXRBZGRyZXNzID0gYCR7YmxvY2t9JHtzdHJlZXROYW1lfSR7c3RyZWV0fWA7XG4vLyAgICAgICAgIGxldCBjb25jYXRBZGRyZXNzID0gYCR7YmxvY2t9JHtzdHJlZXR9YDtcblxuLy8gICAgICAgICBvbkNoYW5nZURldGFpbFZhbHVlKCd0ZXh0JywgJ2Jsa19ubycsIHJlc3VsdC5ibG9jaywgZm9ybU5hbWUpO1xuLy8gICAgICAgICBjb25jYXRBZGRyZXNzID0gc3RyZWV0O1xuXG4vLyAgICAgICAgIG9uQ2hhbmdlRGV0YWlsVmFsdWUoJ3RleHQnLCAnYWRkcmVzcycsIGNvbmNhdEFkZHJlc3MsIGZvcm1OYW1lKTtcbi8vICAgICAgIH1cbi8vICAgICB9XG4vLyAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4vLyAgIH1cbi8vIH07XG5cbi8vIGV4cG9ydCBjb25zdCBnZXREZXBlbmRlbnREcm9wZG93bkxpc3QgPSAocHJvZmlsZSwgZGVwZW5kZW50cykgPT4ge1xuLy8gICB0cnkge1xuLy8gICAgIHJldHVybiBfLnJlZHVjZShkZXBlbmRlbnRzLCAocmVzdWx0LCBkKSA9PiB7XG4vLyAgICAgICBpZiAoZCAmJiBkLmlkKSB7XG4vLyAgICAgICAgIHJlc3VsdC5wdXNoKHtcbi8vICAgICAgICAgICBpZDogZC5pZCxcbi8vICAgICAgICAgICBnZW5kZXI6IGQuZ2VuZGVyIHx8ICdNYWxlJyxcbi8vICAgICAgICAgICBuYW1lOiBkLmZpcnN0TmFtZSB8fCBkLnN1cm5hbWUgPyBgJHtkLmZpcnN0TmFtZSB8fCAnJ30ke2QuZmlyc3ROYW1lID8gJyAnIDogJyd9JHtkLnN1cm5hbWUgfHwgJyd9YCA6ICdNeXNlbGYnLFxuLy8gICAgICAgICAgIHJlbGF0aW9uc2hpcDogZC5yZWxhdGlvbnNoaXAgfHwgJ2RlcGVuZGFudCcsXG4vLyAgICAgICAgIH0pO1xuLy8gICAgICAgfVxuXG4vLyAgICAgICByZXR1cm4gcmVzdWx0O1xuLy8gICAgIH0sIHByb2ZpbGUgPyBbe1xuLy8gICAgICAgaWQ6IDAsXG4vLyAgICAgICBnZW5kZXI6IHByb2ZpbGUuZ2VuZGVyIHx8ICdNYWxlJyxcbi8vICAgICAgIG5hbWU6IHByb2ZpbGUuZmlyc3ROYW1lIHx8IHByb2ZpbGUuc3VybmFtZSA/IGAke3Byb2ZpbGUuZmlyc3ROYW1lIHx8ICcnfSR7cHJvZmlsZS5maXJzdE5hbWUgPyAnICcgOiAnJ30ke3Byb2ZpbGUuc3VybmFtZSB8fCAnJ31gIDogJ015c2VsZicsXG4vLyAgICAgICByZWxhdGlvbnNoaXA6ICdNeXNlbGYnLFxuLy8gICAgIH1dIDogW10pO1xuLy8gICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuLy8gICB9XG5cbi8vICAgcmV0dXJuIG51bGw7XG4vLyB9O1xuXG4vLyBleHBvcnQgY29uc3QgbWFuYWdlUmViYXRlID0gKGxvY2F0aW9uU2VhcmNoLCBkb1NldFBhcnRuZXJzaGlwUGFyYW1zLCBwYXJ0bmVyc1RvU3RvcmVDb29raWVzID0gW10pID0+IHtcbi8vICAgdHJ5IHtcbi8vICAgICBsZXQgc2VhcmNoUGFyYW1zVG9Vc2UgPSBudWxsO1xuLy8gICAgIGxldCBpc0Zyb21VUkwgPSBmYWxzZTtcbi8vICAgICAvLyBFeHRyYWN0IGFsbCBzZWFyY2ggcGFyYW1zXG4vLyAgICAgY29uc3Qgc2VhcmNoUGFyYW1zID0gZXh0cmFjdFNlYXJjaFBhcmFtcyhsb2NhdGlvblNlYXJjaCk7XG4vLyAgICAgLy8gVXNlIHNlYXJjaFBhcmFtcyBpZiBpbmNvbWluZyBpcyByZWJhdGUgZGF0YVxuLy8gICAgIGlmIChzZWFyY2hQYXJhbXMgJiYgc2VhcmNoUGFyYW1zLnV0bV9zb3VyY2UgJiYgc2VhcmNoUGFyYW1zLnJlZmVyZW5jZV9pZCkge1xuLy8gICAgICAgc2VhcmNoUGFyYW1zVG9Vc2UgPSBzZWFyY2hQYXJhbXM7XG4vLyAgICAgICBpc0Zyb21VUkwgPSB0cnVlO1xuLy8gICAgIH1cbi8vICAgICAvLyBlbHNlIHtcbi8vICAgICAvLyAgIC8vIElmIG5vdCwgY2hlY2sgY29va2llc1xuLy8gICAgIC8vICAgY29uc3Qgc2F2ZWRQYXJhbXMgPSBjb29raWUubG9hZCgncmViYXRlX2RhdGEnKTtcbi8vICAgICAvLyAgIC8vIElmIGFsbCBwYXJhbXMgYXJlIHZhbGlkXG4vLyAgICAgLy8gICBpZiAoc2F2ZWRQYXJhbXNcbi8vICAgICAvLyAgICAgJiYgc2F2ZWRQYXJhbXMudXRtX3NvdXJjZVxuLy8gICAgIC8vICAgICAmJiBzYXZlZFBhcmFtcy5yZWZlcmVuY2VfaWRcbi8vICAgICAvLyAgICkge1xuLy8gICAgIC8vICAgICBzZWFyY2hQYXJhbXNUb1VzZSA9IHNhdmVkUGFyYW1zO1xuLy8gICAgIC8vICAgfVxuLy8gICAgIC8vIH1cblxuLy8gICAgIC8vIElmIHRoZXJlIGlzIHZhbGlkIHJlYmF0ZSBkYXRhIHRvIHVzZVxuLy8gICAgIGlmIChzZWFyY2hQYXJhbXNUb1VzZSkge1xuLy8gICAgICAgLy8gU2V0IGl0IHRvIHRoZSBzdGF0ZVxuLy8gICAgICAgZG9TZXRQYXJ0bmVyc2hpcFBhcmFtcyhcbi8vICAgICAgICAgc2VhcmNoUGFyYW1zVG9Vc2UudXRtX3NvdXJjZSxcbi8vICAgICAgICAgc2VhcmNoUGFyYW1zVG9Vc2UucmVmZXJlbmNlX2lkLFxuLy8gICAgICAgKTtcblxuLy8gICAgICAgLy8gSWYgcGFyYW1zIGlzIGZyb20gaW5jb21pbmcgdXJsXG4vLyAgICAgICBpZiAoc2VhcmNoUGFyYW1zICYmIGlzRnJvbVVSTCkge1xuLy8gICAgICAgICBjb25zdCBwYXJ0bmVySW5mbyA9IHBhcnRuZXJzVG9TdG9yZUNvb2tpZXMuZmluZChwID0+IHAuc291cmNlID09PSBzZWFyY2hQYXJhbXMudXRtX3NvdXJjZSk7XG4vLyAgICAgICAgIC8vIFN0b3JlIHRvIGNvb2tpZSBpZiBmb3VuZFxuLy8gICAgICAgICBpZiAocGFydG5lckluZm8pIHtcbi8vICAgICAgICAgICBjb29raWUuc2F2ZSgncmViYXRlX2RhdGEnLCBKU09OLnN0cmluZ2lmeShzZWFyY2hQYXJhbXMpLCB7XG4vLyAgICAgICAgICAgICBwYXRoOiAnLycsXG4vLyAgICAgICAgICAgICBleHBpcmVzOiBtb21lbnQoKS5hZGQocGFydG5lckluZm8uZXhwaXJ5X2RheXMsICdkYXlzJykudG9EYXRlKCksXG4vLyAgICAgICAgICAgfSk7XG4vLyAgICAgICAgIH0gZWxzZSB7XG4vLyAgICAgICAgICAgLy8gUmVtb3ZlIHByZXZpb3VzIGRhdGEgaWYgaW5jb21pbmcgaXMgbm90IGdvaW5nIHRvIGJlIHNhdmVkXG4vLyAgICAgICAgICAgY29va2llLnJlbW92ZSgncmViYXRlX2RhdGEnLCB7IHBhdGg6ICcvJyB9KTtcbi8vICAgICAgICAgfVxuLy8gICAgICAgfVxuLy8gICAgIH1cbi8vICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbi8vICAgfVxuLy8gfTtcblxuZXhwb3J0IGNvbnN0IGZsYXR0ZW5PYmplY3QgPSAob2JqZWN0KSA9PiBfLnJlZHVjZShvYmplY3QsIChyZXN1bHQsIGNhdGVnb3J5LCBjYXRlZ29yeUtleSkgPT4ge1xuICBfLmZvckVhY2goY2F0ZWdvcnksIChpdGVtLCBrZXkpID0+IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICByZXN1bHRbYCR7Y2F0ZWdvcnlLZXl9LiR7a2V5fWBdID0gaXRlbTtcbiAgfSk7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn0sIHt9KTtcblxuLy8gZXhwb3J0IGNvbnN0IGNvcHlUb0NsaXBib2FyZCA9IChzdHIpID0+IHtcbi8vICAgY29uc3QgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpO1xuLy8gICBlbC52YWx1ZSA9IHN0cjtcbi8vICAgZWwuc2V0QXR0cmlidXRlKCdyZWFkb25seScsICcnKTtcbi8vICAgZWwuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuLy8gICBlbC5zdHlsZS5sZWZ0ID0gJy05OTk5cHgnO1xuLy8gICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsKTtcbi8vICAgY29uc3Qgc2VsZWN0ZWQgPSBkb2N1bWVudC5nZXRTZWxlY3Rpb24oKS5yYW5nZUNvdW50ID4gMCA/IGRvY3VtZW50LmdldFNlbGVjdGlvbigpLmdldFJhbmdlQXQoMCkgOiBmYWxzZTtcbi8vICAgZWwuc2VsZWN0KCk7XG4vLyAgIGRvY3VtZW50LmV4ZWNDb21tYW5kKCdjb3B5Jyk7XG4vLyAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZWwpO1xuLy8gICBpZiAoc2VsZWN0ZWQpIHtcbi8vICAgICBkb2N1bWVudC5nZXRTZWxlY3Rpb24oKS5yZW1vdmVBbGxSYW5nZXMoKTtcbi8vICAgICBkb2N1bWVudC5nZXRTZWxlY3Rpb24oKS5hZGRSYW5nZShzZWxlY3RlZCk7XG4vLyAgIH1cbi8vIH07XG5cbi8vIGV4cG9ydCBjb25zdCBzY3JvbGxUb0VsZW1lbnRJRCA9IChpZCkgPT4ge1xuLy8gICBjb25zdCBlbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4vLyAgIGlmIChlbGUpIHtcbi8vICAgICBjb25zdCBib2R5UmVjdCA9IGRvY3VtZW50LmJvZHkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4vLyAgICAgY29uc3QgZWxlbVJlY3QgPSBlbGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4vLyAgICAgY29uc3Qgb2Zmc2V0ID0gZWxlbVJlY3QudG9wIC0gYm9keVJlY3QudG9wIC0gODg7XG4vLyAgICAgd2luZG93LnNjcm9sbFRvKHsgYmVoYXZpb3I6ICdzbW9vdGgnLCB0b3A6IG9mZnNldCB9KTtcbi8vICAgfVxuLy8gfTtcblxuLy8gZXhwb3J0IGNvbnN0IGdvVG9MaW5rID0gKGhpc3RvcnksIHVybCkgPT4ge1xuLy8gICB0cnkge1xuLy8gICAgIGlmICghL1xcL2Jsb2dcXC8vLnRlc3QodXJsKSAmJiAvXnd3d3xodHRwLy50ZXN0KHVybCkpIHtcbi8vICAgICAgIGNvbnN0IHNwbGl0dGVkID0gdXJsLnNwbGl0KCdwb2xpY3lwYWwuY29tJyk7XG4vLyAgICAgICBoaXN0b3J5LnB1c2goc3BsaXR0ZWQubGVuZ3RoID4gMSA/IHNwbGl0dGVkW3NwbGl0dGVkLmxlbmd0aCAtIDFdIDogdXJsKTtcbi8vICAgICB9IGVsc2Uge1xuLy8gICAgICAgd2luZG93Lm9wZW4odXJsLCAnX2JsYW5rJyk7XG4vLyAgICAgfVxuLy8gICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gdXJsO1xuLy8gICB9XG4vLyB9O1xuXG4vLyBleHBvcnQgY29uc3QgaXNNb2JpbGUgPSAoKSA9PiB7XG4vLyAgIGNvbnN0IHVzZXJBZ2VudCA9IG5hdmlnYXRvci51c2VyQWdlbnQgfHwgbmF2aWdhdG9yLnZlbmRvciB8fCB3aW5kb3cub3BlcmE7XG4vLyAgIGlmICh1c2VyQWdlbnQubWF0Y2goL0FuZHJvaWQvaSlcbi8vICAgICB8fCB1c2VyQWdlbnQubWF0Y2goL3dlYk9TL2kpXG4vLyAgICAgfHwgdXNlckFnZW50Lm1hdGNoKC9pUGhvbmUvaSlcbi8vICAgICB8fCB1c2VyQWdlbnQubWF0Y2goL2lQYWQvaSlcbi8vICAgICB8fCB1c2VyQWdlbnQubWF0Y2goL2lQb2QvaSlcbi8vICAgICB8fCB1c2VyQWdlbnQubWF0Y2goL0JsYWNrQmVycnkvaSlcbi8vICAgICB8fCB1c2VyQWdlbnQubWF0Y2goL1dpbmRvd3MgUGhvbmUvaSlcbi8vICAgKSB7XG4vLyAgICAgcmV0dXJuIHRydWU7XG4vLyAgIH1cbi8vICAgcmV0dXJuIGZhbHNlO1xuLy8gfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/lib/helperFunctions.js\n");

/***/ })

})